{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BertPreprocess |  OFF | Language model |23/4/2021 | multi-dialect-bert-base-arabic ","provenance":[{"file_id":"1oNO1e4lMNDCy3eQH-sBlNjEdvO3RWwg7","timestamp":1621939597252},{"file_id":"1IDHwF_W9hqcsJOqSi69nUjwZDILpkZUn","timestamp":1620340263405},{"file_id":"1mwyOGZsoZeODQ1c8n34oiekc9byIcv4N","timestamp":1619191857227},{"file_id":"1P9iQHtUH5KUbTVtp8B4-AopZzEEPE0lw","timestamp":1618868148454}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"c0f6d72942e2429ea321eaa1f9334a41":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_30b8e70cccb64d6fad025581b285d912","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_ab7211e48dc34a07ac84ea0fd49d7c9e","IPY_MODEL_fa8268cf8e504e5d9dfcdf2b5169ec74"]}},"30b8e70cccb64d6fad025581b285d912":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"ab7211e48dc34a07ac84ea0fd49d7c9e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_7d69df371615488c952f4a537be920ee","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":456,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":456,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3eb6cf383a204b62978d3034c366cfdb"}},"fa8268cf8e504e5d9dfcdf2b5169ec74":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b6abaf2f8bef4285907a5a6b93f24fd7","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 456/456 [00:04&lt;00:00, 94.7B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_a0b11a7eb6d94f8e803eca58a10cba8e"}},"7d69df371615488c952f4a537be920ee":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"3eb6cf383a204b62978d3034c366cfdb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b6abaf2f8bef4285907a5a6b93f24fd7":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"a0b11a7eb6d94f8e803eca58a10cba8e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"7ba42d26cc28469297904d497a7b533d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_3bff55a735a3409a84d3c06c71c3d3b9","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_3d7ebf5a963545a8979be83b423c8ab2","IPY_MODEL_9e5b9221846d4ce6a00c90e4d83cee20"]}},"3bff55a735a3409a84d3c06c71c3d3b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"3d7ebf5a963545a8979be83b423c8ab2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_0571ca207996445fba4236ce30dccb80","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":334032,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":334032,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_2a3a91c3c7aa4e8186b4c8e6bf0cfa09"}},"9e5b9221846d4ce6a00c90e4d83cee20":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_96a805b1944c4f648dcac799dbb4fcad","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 334k/334k [00:03&lt;00:00, 102kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3ebe1edf246045e7aaa94eaf5658a8a6"}},"0571ca207996445fba4236ce30dccb80":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"2a3a91c3c7aa4e8186b4c8e6bf0cfa09":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"96a805b1944c4f648dcac799dbb4fcad":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"3ebe1edf246045e7aaa94eaf5658a8a6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"fe8cc562fdcd4892b130460bc0672d22":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_a3d157180fc2406eaa60f642507ab84f","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_61e56109eb0a46a8a7d5bc5deaad3bfc","IPY_MODEL_db84499b7cf84edb9278c796db7575ad"]}},"a3d157180fc2406eaa60f642507ab84f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"61e56109eb0a46a8a7d5bc5deaad3bfc":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_13404c41a83f408aa73d9c8018b32d89","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":445015160,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":445015160,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_7bc28b7590c2479bbcfd33e68c0fee81"}},"db84499b7cf84edb9278c796db7575ad":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_091ae36670e14df8bb08eae376fd5a74","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 445M/445M [01:01&lt;00:00, 7.18MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_57af7013a0834e0298574374c20a075e"}},"13404c41a83f408aa73d9c8018b32d89":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"7bc28b7590c2479bbcfd33e68c0fee81":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"091ae36670e14df8bb08eae376fd5a74":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"57af7013a0834e0298574374c20a075e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"g4mZ8KYblg-g"},"source":["#installing dependencies"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IbHOBNd4ETRD","executionInfo":{"status":"ok","timestamp":1622195862486,"user_tz":-180,"elapsed":25345,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"e72925f7-3d47-4f2b-b3e0-8629d1268792"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C4tlwQ8si_FI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622195866702,"user_tz":-180,"elapsed":4221,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"44ec3db3-1419-4f47-aadb-ba35749488bf"},"source":["import torch\n","\n","# If there's a GPU available...\n","if torch.cuda.is_available():    \n","\n","    # Tell PyTorch to use the GPU.    \n","    device = torch.device(\"cuda\")\n","\n","    print('There are %d GPU(s) available.' % torch.cuda.device_count())\n","\n","    print('We will use the GPU:', torch.cuda.get_device_name(0))\n","    !nvidia-smi\n","\n","# If not...\n","else:\n","    print('No GPU available, using the CPU instead.')\n","    device = torch.device(\"cpu\")"],"execution_count":2,"outputs":[{"output_type":"stream","text":["There are 1 GPU(s) available.\n","We will use the GPU: Tesla K80\n","Fri May 28 09:57:45 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 465.19.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla K80           Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   46C    P8    29W / 149W |      3MiB / 11441MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y024z5AnlTLz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622195899879,"user_tz":-180,"elapsed":33181,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"8c18cb5b-6b92-4d2d-cfdf-ce7b6e1ae904"},"source":["!pip install -q optuna==2.3.0\n","!pip install -q transformers==4.2.1\n","!pip install -q farasapy\n","!pip install -q pyarabic\n","!git clone https://huggingface.co/bashar-talafha/multi-dialect-bert-base-arabic"],"execution_count":3,"outputs":[{"output_type":"stream","text":["\u001b[?25l\r\u001b[K     |█▎                              | 10kB 18.9MB/s eta 0:00:01\r\u001b[K     |██▌                             | 20kB 6.8MB/s eta 0:00:01\r\u001b[K     |███▉                            | 30kB 4.3MB/s eta 0:00:01\r\u001b[K     |█████                           | 40kB 4.1MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 51kB 2.2MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 61kB 2.4MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 71kB 2.6MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 81kB 2.7MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 92kB 2.7MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 102kB 3.0MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 112kB 3.0MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 122kB 3.0MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 133kB 3.0MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 143kB 3.0MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 153kB 3.0MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 163kB 3.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 174kB 3.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 184kB 3.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 194kB 3.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 204kB 3.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▋     | 215kB 3.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 225kB 3.0MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 235kB 3.0MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 245kB 3.0MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 256kB 3.0MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 266kB 3.0MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 174kB 14.3MB/s \n","\u001b[K     |████████████████████████████████| 81kB 6.3MB/s \n","\u001b[K     |████████████████████████████████| 81kB 7.0MB/s \n","\u001b[K     |████████████████████████████████| 51kB 5.1MB/s \n","\u001b[K     |████████████████████████████████| 112kB 12.6MB/s \n","\u001b[K     |████████████████████████████████| 143kB 12.8MB/s \n","\u001b[?25h  Building wheel for optuna (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 1.8MB 3.0MB/s \n","\u001b[K     |████████████████████████████████| 2.9MB 17.9MB/s \n","\u001b[K     |████████████████████████████████| 901kB 29.7MB/s \n","\u001b[K     |████████████████████████████████| 112kB 2.8MB/s \n","\u001b[?25h  Building wheel for pyarabic (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Cloning into 'multi-dialect-bert-base-arabic'...\n","remote: Enumerating objects: 21, done.\u001b[K\n","remote: Counting objects: 100% (21/21), done.\u001b[K\n","remote: Compressing objects: 100% (20/20), done.\u001b[K\n","remote: Total 21 (delta 6), reused 0 (delta 0)\u001b[K\n","Unpacking objects: 100% (21/21), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"krBvefg6l6vv","executionInfo":{"status":"ok","timestamp":1622195899880,"user_tz":-180,"elapsed":6,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["!mkdir data\n","!mkdir train"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TVay9KamnC3I"},"source":["#Creating training datasets"]},{"cell_type":"code","metadata":{"id":"hr84ozGinCFh","executionInfo":{"status":"ok","timestamp":1622195901138,"user_tz":-180,"elapsed":1262,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["import pandas as pd\n","import numpy as np\n","import re\n","\n","from tqdm import tqdm_notebook as tqdm\n","from sklearn.model_selection import train_test_split\n","all_datasets= []"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"8PhWP2JzrEci","executionInfo":{"status":"ok","timestamp":1622195901139,"user_tz":-180,"elapsed":4,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["class Dataset:\n","    def __init__(\n","        self,\n","        name,\n","        train,\n","        valid,\n","        test,\n","        label_list,\n","        # label_list_valid,\n","        # label_list_test\n","    ):\n","        self.name = name\n","        self.train = train\n","        self.valid = valid\n","        self.test = test\n","        self.label_list = label_list\n","        # self.label_list_valid = label_list_valid\n","        # self.label_list_test = label_list_test"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"joWPYWGMqLau"},"source":["##Semeval Dataset "]},{"cell_type":"code","metadata":{"id":"lt_lGy85zuca","executionInfo":{"status":"ok","timestamp":1622195901139,"user_tz":-180,"elapsed":3,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["text_cleaning_re = \"[a-zA-Z]|\\d+|[٠١٢٣٤٥٦٧٨٩]|[.#،<>:@,\\\\-_”“٪ًَ]\"\n","def preprocess(text):\n","  # search = [\"أ\",\"إ\",\"آ\",\"ة\",\"_\",\"-\",\"/\",\".\",\"،\",\" و \",\" يا \",'\"',\"ـ\",\"'\",\"ى\",\"\\\\\",'\\n', '\\t','&quot;','?','؟','!','#']\n","  # replace = [\"ا\",\"ا\",\"ا\",\"ه\",\" \",\" \",\"\",\"\",\"\",\" و\",\" يا\",\"\",\"\",\"\",\"ي\",\"\",' ', ' ',' ',' ? ',' ؟ ',' ! ',' ']\n","  #remove tashkeel\n","  p_tashkeel = re.compile(r'[\\u0617-\\u061A\\u064B-\\u0652]')\n","  text = re.sub(p_tashkeel,\"\", str(text))\n","  # text = text.replace('وو', 'و')\n","  # text = text.replace('يي', 'ي')\n","  # text = text.replace('اا', 'ا')\n","  text = re.sub(text_cleaning_re, ' ', str(text).lower()).strip()\n","  #remove longation\n","  text = re.sub(r'(.)\\1+', r'\\1\\1', str(text)) \n","  text = re.sub(\"[إأآا]\", \"ا\", str(text))\n","  text = re.sub(r\"([?!¿])\", r\" \\1 \", str(text))\n","  text = re.sub(\"ى\", \"ي\", str(text))\n","  # text = re.sub(\"ؤ\", \"ء\", text)\n","  # text = re.sub(\"ئ\", \"ء\", text)\n","  text = re.sub(\"ة\", \"ه\", str(text))\n","  # for i in range(0, len(search)):\n","  #       text = text.replace(search[i], replace[i])\n","  \n","   #trim    \n","  # text = text.strip()\n","\n","  tokens = []\n","  for token in text.split():\n","    # if token not in stop_words:\n","      tokens.append(token)\n","  return \" \".join(tokens)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"-6oL3qkXmOgJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622195906375,"user_tz":-180,"elapsed":5239,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"2a833044-32dc-4f81-fc31-f5f9d0fd7d10"},"source":["#load dataset\n","df_train = pd.read_excel(\"/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/train.xlsx\")\n","df_valid = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/dev.xlsx')\n","df_test_tweets = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/test.xlsx')\n","df_test_labels = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/offLabel.xlsx')\n","\n","#Rename Columns\n","df_train = df_train.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_valid = df_valid.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_test_labels=df_test_labels.rename(columns={'labels':'OFF_Labels'})\n","\n","df_test=pd.concat([df_test_tweets, df_test_labels], axis=1)\n","\n","#drop any row have null values\n","df_train=df_train.dropna(how='any',axis=0)\n","df_valid=df_valid.dropna(how='any',axis=0)\n","# df_train.drop(columns=['HS_Labels'])\n","# df_valid.drop(columns=['HS_Labels'])\n","\n","# ----------------------------------------------------------------- #\n","DATA_COLUMN = \"tweets\"\n","LABEL_COLUMN = \"OFF_Labels\"\n","\n","# ----------------------------------------------------------------- #\n","\n","df_train = df_train[['tweets','OFF_Labels']]\n","df_valid = df_valid[['tweets','OFF_Labels']]\n","df_test = df_test[['tweets','OFF_Labels']]\n","df_train.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_valid.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_test.columns = [DATA_COLUMN,LABEL_COLUMN]\n","# df_test_labels.columns = [LABEL_COLUMN]\n","print(df_train[LABEL_COLUMN].value_counts())\n","print(df_valid[LABEL_COLUMN].value_counts())\n","print(df_test[LABEL_COLUMN].value_counts())\n","\n","label_list_semeval = ['OFF','NOT_OFF']\n","data_semeval = Dataset(\"Data-semeval\", df_train, df_valid,df_test,label_list_semeval)\n","all_datasets.append(data_semeval)\n","\n","# ----------------------------------------------------------------- #\n"],"execution_count":8,"outputs":[{"output_type":"stream","text":["NOT_OFF    5575\n","OFF        1408\n","Name: OFF_Labels, dtype: int64\n","NOT_OFF    821\n","OFF        179\n","Name: OFF_Labels, dtype: int64\n","NOT_OFF    1598\n","OFF         402\n","Name: OFF_Labels, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-WYy5ikAs7l3","colab":{"base_uri":"https://localhost:8080/","height":687,"output_embedded_package_id":"1XMbkrPC4VxIdSA9DaSykvctBOXvX9a1h"},"executionInfo":{"status":"ok","timestamp":1622195913488,"user_tz":-180,"elapsed":7124,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"3b40f118-9d2f-404e-98a9-d9b519d29392"},"source":["%load_ext google.colab.data_table\n","df_train"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Bcwdslw7v0Q8"},"source":["#Trainer"]},{"cell_type":"code","metadata":{"id":"HUn2RB6Bvrxj","executionInfo":{"status":"ok","timestamp":1622195913489,"user_tz":-180,"elapsed":12,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["from transformers import AutoTokenizer, AutoModelForMaskedLM,BertForSequenceClassification,AutoModel\n","import numpy as np\n","from sklearn.metrics import classification_report, accuracy_score, f1_score, confusion_matrix, precision_score , recall_score\n","\n","from transformers import AutoConfig, AutoModelForSequenceClassification, AutoTokenizer, BertTokenizer\n","from transformers.data.processors import SingleSentenceClassificationProcessor\n","from transformers import Trainer , TrainingArguments\n","from transformers.trainer_utils import EvaluationStrategy\n","from transformers.data.processors.utils import InputFeatures\n","from torch.utils.data import Dataset\n","from torch.utils.data import DataLoader\n","from sklearn.utils import resample\n","import logging\n","import torch\n","import optuna \n","# from arabert.preprocess_arabert import preprocess, never_split_tokens\n"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"KfNKr05tv7cA","executionInfo":{"status":"ok","timestamp":1622195913490,"user_tz":-180,"elapsed":13,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["logging.basicConfig(level=logging.WARNING)\n","logger = logging.getLogger(__name__)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"R4SGYoB2EDJD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622195913490,"user_tz":-180,"elapsed":12,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"16446091-092f-43fe-e969-2b9ac70b8af5"},"source":["for x in all_datasets:\n","  print(x.name)"],"execution_count":12,"outputs":[{"output_type":"stream","text":["Data-semeval\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"62Lma6tT5zJi"},"source":["You can choose which model, and dataset from here along with the max sentence length"]},{"cell_type":"code","metadata":{"id":"vzeVFoz1wDYf","executionInfo":{"status":"ok","timestamp":1622195913491,"user_tz":-180,"elapsed":12,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["dataset_name = 'Data-semeval'\n","# model_name = 'qarib/bert-base-qarib'\n","# https://huggingface.co/UBC-NLP/MARBERT\n","model_name = 'bashar-talafha/multi-dialect-bert-base-arabic'\n","task_name = 'classification'\n","# num_labels = 2\n","max_len = 256\n"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tcbD2PCiX4vw","executionInfo":{"status":"ok","timestamp":1622195913491,"user_tz":-180,"elapsed":11,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"8c90cfca-2a51-4452-e883-943c201d4e8c"},"source":["for d in all_datasets:\n","  if d.name==dataset_name:\n","    selected_dataset = d\n","    print('Dataset found \\n',dataset_name)\n","    break"],"execution_count":14,"outputs":[{"output_type":"stream","text":["Dataset found \n"," Data-semeval\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PoyaRIGYCEzh","executionInfo":{"status":"ok","timestamp":1622195913492,"user_tz":-180,"elapsed":10,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["# arabert_prep = ArabertPreprocessor(model_name.split(\"/\")[-1])\n","\n","normal_pre_train = selected_dataset.train[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","normal_pre_valid = selected_dataset.valid[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","normal_pre_test = selected_dataset.test[DATA_COLUMN].apply(lambda x:  preprocess(x))  "],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jKNlXQEcJn31","executionInfo":{"status":"ok","timestamp":1622195970358,"user_tz":-180,"elapsed":56876,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"02c1ab97-7576-4773-cc9e-0e5b1deeacce"},"source":["!git clone https://github.com/aub-mind/arabert\n","from arabert.preprocess import ArabertPreprocessor\n","arabert_prep = ArabertPreprocessor(model_name='bert-base-arabert')\n","arabert_prepv2 = ArabertPreprocessor(model_name='bert-base-arabertv2')\n","\n","arabert_prep_train = selected_dataset.train[DATA_COLUMN].apply(lambda x:   arabert_prep.preprocess(x))\n","arabert_prep_valid = selected_dataset.valid[DATA_COLUMN].apply(lambda x:   arabert_prep.preprocess(x))\n","arabert_prep_test = selected_dataset.test[DATA_COLUMN].apply(lambda x:  arabert_prep.preprocess(x))  \n","\n","# arabert_prep= df_train.assign(arabert_prep=arabert_prep_train)\n"],"execution_count":16,"outputs":[{"output_type":"stream","text":["Cloning into 'arabert'...\n","remote: Enumerating objects: 530, done.\u001b[K\n","remote: Counting objects: 100% (316/316), done.\u001b[K\n","remote: Compressing objects: 100% (228/228), done.\u001b[K\n","remote: Total 530 (delta 167), reused 226 (delta 82), pack-reused 214\u001b[K\n","Receiving objects: 100% (530/530), 4.86 MiB | 7.24 MiB/s, done.\n","Resolving deltas: 100% (290/290), done.\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/urllib3/connectionpool.py:847: InsecureRequestWarning:\n","\n","Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#ssl-warnings\n","\n"],"name":"stderr"},{"output_type":"stream","text":[" 99%|█████████▉| 239M/241M [00:15<00:00, 15.5MiB/s]"],"name":"stdout"},{"output_type":"stream","text":["[2021-05-28 09:58:52,520 - farasapy_logger - WARNING]: Be careful with large lines as they may break on interactive mode. You may switch to Standalone mode for such cases.\n","[2021-05-28 09:58:57,432 - farasapy_logger - WARNING]: Be careful with large lines as they may break on interactive mode. You may switch to Standalone mode for such cases.\n"],"name":"stderr"},{"output_type":"stream","text":["\r100%|██████████| 241M/241M [00:30<00:00, 15.5MiB/s]"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1263,"output_embedded_package_id":"17g7c9F6S4z9bQOC3HzfhLGWjfcI1uvCY"},"id":"WE_MmGDceJxj","executionInfo":{"status":"ok","timestamp":1622195982558,"user_tz":-180,"elapsed":12214,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"183e68ee-2d26-4cb5-f056-67deae62b82f"},"source":["df_train=df_train.assign(norm_prep=normal_pre_train)\n","df_train= df_train.assign(arabert_prep=arabert_prep_train)\n","# df_train.to_excel(\"/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/train.xlsx\",index=False);\n","df_train"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"if6uOCzbJ0LO","executionInfo":{"status":"ok","timestamp":1622195982559,"user_tz":-180,"elapsed":32,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"68c5998e-1f42-4055-b984-7798b5d2db20"},"source":["a_list=[]\n","for value in df_train.norm_prep.str.split(' '):\n","    a_list.extend(value)\n","print('Number of words using preprocessing : ', len(a_list))\n","print('Number of uniqe words using preprocessing : ', len(list(set(a_list))))"],"execution_count":18,"outputs":[{"output_type":"stream","text":["Number of words using preprocessing :  129497\n","Number of uniqe words using preprocessing :  32340\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x01JRcL6J2Vg","executionInfo":{"status":"ok","timestamp":1622195982560,"user_tz":-180,"elapsed":28,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"82dcf941-51ea-4f01-fa52-5f6dce281770"},"source":["arabert_prep_list=[]\n","for value in df_train.arabert_prep.str.split(' '):\n","    arabert_prep_list.extend(value)\n","print('Number of words using Bert preprocessing : ', len(arabert_prep_list))\n","print('Number of uniqe words using Bert preprocessing : ', len(list(set(arabert_prep_list))))"],"execution_count":19,"outputs":[{"output_type":"stream","text":["Number of words using Bert preprocessing :  233582\n","Number of uniqe words using Bert preprocessing :  18774\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OKo9gABZJ9LS","executionInfo":{"status":"ok","timestamp":1622195982560,"user_tz":-180,"elapsed":22,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"a9272ce8-7d4b-437e-aea8-a71f2d6c5186"},"source":["for n in range(10):\n","  # info = [[df_train.tweets[n], arabert_prep_train[n]]]\n","  # print( tabulate(info))\n","  print(\"Original: \",df_train.tweets[n])\n","  print(\"normal_pre: \", df_train.norm_prep[n])\n","  print(\"arabert_prep \", df_train.arabert_prep[n])\n","  print('------')"],"execution_count":20,"outputs":[{"output_type":"stream","text":["Original:  الحمدلله يارب فوز مهم يا زمالك.. كل الدعم ليكم يا رجالة ⚪🔴<LF>الدوري يا زمالك .. الدوري يا زمالك<LF>#صدارة_بس\n","normal_pre:  الحمدلله يارب فوز مهم يا زمالك كل الدعم ليكم يا رجاله ⚪🔴 الدوري يا زمالك الدوري يا زمالك صداره بس\n","arabert_prep  ال+ حمدلله يارب فوز مهم يا زمالك . كل ال+ دعم لي +كم يا رجال +ة ⚪ ? ? < LF > ال+ دوري يا زمالك . ال+ دوري يا زمالك < LF > # صدار +ة _ بس\n","------\n","Original:  فدوه يا بخت فدوه يا زمن واحد منكم يجيبه\n","normal_pre:  فدوه يا بخت فدوه يا زمن واحد منكم يجيبه\n","arabert_prep  ف+ دو +ه يا بخت ف+ دو +ه يا زمن واحد من +كم يجيب +ه\n","------\n","Original:  RT @USER: يا رب يا واحد يا أحد بحق يوم الاحد ان تهلك بني سعود المجرمين. لاجل اطفال اليمن شاركوا.\n","normal_pre:  يا رب يا واحد يا احد بحق يوم الاحد ان تهلك بني سعود المجرمين لاجل اطفال اليمن شاركوا\n","arabert_prep  RT [مستخدم] : يا رب يا واحد يا أحد ب+ حق يوم ال+ احد +ان تهلك بني سعود ال+ مجرم +ين . ل+ أجل أطفال ال+ يمن شارك +وا .\n","------\n","Original:  RT @USER: #هوا_الحرية يا وجع قلبي عليكي يا امي...<LF>الله لا يحرق قلبك ويكسر بخاطرك للمرة الف نقف إجلال لعظمة وقدرة لين قلب الأم ال…\n","normal_pre:  هوا الحريه يا وجع قلبي عليكي يا امي الله لا يحرق قلبك ويكسر بخاطرك للمره الف نقف اجلال لعظمه وقدره لين قلب الام ال…\n","arabert_prep  RT [مستخدم] : # هو +ا _ ال+ حري +ة يا وجع قلب +ي عليكي يا أم +ي . < LF > الله لا يحرق قلب ك+ و+ يكسر ب+ خاطر ك+ ل+ ال+ مر +ة ألف نقف إجلال ل+ عظم +ة و+ قدر +ة لين قلب ال+ أم ال+ \\ .\n","------\n","Original:  يا بكون بحياتك الأهم يا إما ما بدي أكون 🎼\n","normal_pre:  يا بكون بحياتك الاهم يا اما ما بدي اكون 🎼\n","arabert_prep  يا ب+ كون ب+ حيا +ت ك+ ال+ أهم يا إما ما بدي أكون ? ?\n","------\n","Original:  @USER اخخ يا قلببي يا هالحلقه 😩😭♥️ متعه على بكاء على حماس كل المشاعر داخله ببعض\n","normal_pre:  اخخ يا قلببي يا هالحلقه 😩😭♥️ متعه علي بكاء علي حماس كل المشاعر داخله ببعض\n","arabert_prep  [مستخدم] اخخ يا قلببي يا هالحلقه ? ? ? ? ♥ ️ متع +ه على بكاء على حماس كل ال+ مشاعر داخل +ه ب+ بعض\n","------\n","Original:  والله الزول السوداني أثبت أنه سابق بالتحضّر عن كل العرب:<LF>٤٠٪ التمثيل النسائي في المجلس التشريعي السوداني ما بعد الثورة. <LF>الكلام إلك يا جارة لتسمعي يا كنّة!<LF>#السودان #سوريا #الجزائر\n","normal_pre:  والله الزول السوداني اثبت انه سابق بالتحضر عن كل العرب التمثيل النسائي في المجلس التشريعي السوداني ما بعد الثوره الكلام الك يا جاره لتسمعي يا كنه ! السودان سوريا الجزائر\n","arabert_prep  و+ الله ال+ زول ال+ سوداني أثبت أن +ه سابق ب+ ال+ تحضر عن كل ال+ عرب : < LF > 40 ٪ ال+ تمثيل ال+ نسائي في ال+ مجلس ال+ تشريعي ال+ سوداني ما بعد ال+ ثور +ة . < LF > ال+ كلام إلك يا جار +ة ل+ تسمع +ي يا +كن +ة ! < LF > # ال+ سودان # سوريا # ال+ جزائر\n","------\n","Original:  RT @USER: جالس أسمع أحمد قاسم يغني: \"أحبك من كل قلبي يا بلادي يا يمن\". حتى أنا والله أحب اليمن من كل قلبي أحب بلادي من طرفها لطرفها \"ب…\n","normal_pre:  جالس اسمع احمد قاسم يغني \"احبك من كل قلبي يا بلادي يا يمن\" حتي انا والله احب اليمن من كل قلبي احب بلادي من طرفها لطرفها \"ب…\n","arabert_prep  RT [مستخدم] : جالس أسمع أحمد قاسم يغني : \" أحب ك+ من كل قلب +ي يا بلاد +ي يا يمن \" . حتى أنا و+ الله أحب ال+ يمن من كل قلب +ي أحب بلاد +ي من طرف +ها ل+ طرف +ها \" ب+ \\ .\n","------\n","Original:  في قلبي يا مغلاك<LF>وبعيني يا محلاك ..\n","normal_pre:  في قلبي يا مغلاك وبعيني يا محلاك\n","arabert_prep  في قلب +ي يا مغلا ك+ < LF > و+ ب+ عيني يا محلا ك+ .\n","------\n","Original:  يا التاج ع الراس يا السادة<LF>يا مالك الروح وراعيها❤️\n","normal_pre:  يا التاج ع الراس يا الساده يا مالك الروح وراعيها❤️\n","arabert_prep  يا ال+ تاج ع ال+ رأس يا ال+ ساد +ة < LF > يا مالك ال+ روح و+ راعي +ها ❤ ️\n","------\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"4YS7XI2bZTyz","executionInfo":{"status":"ok","timestamp":1622195982561,"user_tz":-180,"elapsed":19,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["class BERTDataset(Dataset):\n","    def __init__(self, text, target, model_name, max_len, label_map):\n","      super(BERTDataset).__init__()\n","      self.text = text\n","      self.target = target\n","      self.tokenizer_name = model_name\n","      self.tokenizer = AutoTokenizer.from_pretrained(model_name)\n","      self.max_len = max_len\n","      self.label_map = label_map\n","      \n","\n","    def __len__(self):\n","      return len(self.text)\n","\n","    def __getitem__(self,item):\n","      text = str(self.text[item])\n","      text = \" \".join(text.split())\n","\n","\n","        \n","      input_ids = self.tokenizer.encode(\n","          text,\n","          add_special_tokens=True,\n","          max_length=self.max_len,\n","          truncation='longest_first'\n","      )     \n","    \n","      attention_mask = [1] * len(input_ids)\n","\n","      # Zero-pad up to the sequence length.\n","      padding_length = self.max_len - len(input_ids)\n","      input_ids = input_ids + ([self.tokenizer.pad_token_id] * padding_length)\n","      attention_mask = attention_mask + ([0] * padding_length)    \n","      \n","      return InputFeatures(input_ids=input_ids, attention_mask=attention_mask, label=self.label_map[self.target[item]])"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"mciZOFz-amkV","colab":{"base_uri":"https://localhost:8080/","height":132,"referenced_widgets":["c0f6d72942e2429ea321eaa1f9334a41","30b8e70cccb64d6fad025581b285d912","ab7211e48dc34a07ac84ea0fd49d7c9e","fa8268cf8e504e5d9dfcdf2b5169ec74","7d69df371615488c952f4a537be920ee","3eb6cf383a204b62978d3034c366cfdb","b6abaf2f8bef4285907a5a6b93f24fd7","a0b11a7eb6d94f8e803eca58a10cba8e","7ba42d26cc28469297904d497a7b533d","3bff55a735a3409a84d3c06c71c3d3b9","3d7ebf5a963545a8979be83b423c8ab2","9e5b9221846d4ce6a00c90e4d83cee20","0571ca207996445fba4236ce30dccb80","2a3a91c3c7aa4e8186b4c8e6bf0cfa09","96a805b1944c4f648dcac799dbb4fcad","3ebe1edf246045e7aaa94eaf5658a8a6"]},"executionInfo":{"status":"ok","timestamp":1622195986302,"user_tz":-180,"elapsed":3760,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"2bd13ce4-e67f-4170-8c87-67b6271527b5"},"source":["label_map = { v:index for index, v in enumerate(selected_dataset.label_list) }\n","print(label_map)\n","# label_map_test = { v:index for index, v in enumerate(df_test_labels.HS_Labels) }\n","# print(label_map_test)\n","# label_map_valid = { v:index for index, v in enumerate(df_valid.HS_Labels) }\n","# print(label_map_valid)\n","# train_dataset = BERTDataset(selected_dataset.train[DATA_COLUMN].to_list(),selected_dataset.train[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","# test_dataset = BERTDataset(selected_dataset.test[DATA_COLUMN].to_list(),selected_dataset.test[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","\n","train_dataset = BERTDataset(arabert_prep_train.to_list(),selected_dataset.train[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","valid_dataset = BERTDataset(arabert_prep_valid.to_list(),selected_dataset.valid[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","test_dataset = BERTDataset(arabert_prep_test.to_list(),selected_dataset.test[LABEL_COLUMN].to_list(),model_name,max_len,label_map)"],"execution_count":22,"outputs":[{"output_type":"stream","text":["{'OFF': 0, 'NOT_OFF': 1}\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"c0f6d72942e2429ea321eaa1f9334a41","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=456.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"7ba42d26cc28469297904d497a7b533d","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=334032.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lt7l0IxjbmNu","executionInfo":{"status":"ok","timestamp":1622195986304,"user_tz":-180,"elapsed":14,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["def model_init():\n","    return AutoModelForSequenceClassification.from_pretrained(model_name, return_dict=True, num_labels=len(label_map))"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"id":"UYU6G4vWc5nz","executionInfo":{"status":"ok","timestamp":1622195986305,"user_tz":-180,"elapsed":15,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["def compute_metrics(p): #p should be of type EvalPrediction\n","  preds = np.argmax(p.predictions, axis=1)\n","  assert len(preds) == len(p.label_ids)\n","  print(classification_report(p.label_ids,preds))\n","  print(confusion_matrix(p.label_ids,preds))\n","\n","  macro_f1_pos_neg = f1_score(p.label_ids,preds,average='macro',labels=[0,1])\n","  macro_f1 = f1_score(p.label_ids,preds,average='macro')\n","  macro_precision = precision_score(p.label_ids,preds,average='macro')\n","  macro_recall = recall_score(p.label_ids,preds,average='macro')\n","  acc = accuracy_score(p.label_ids,preds)\n","  return {\n","      'macro_f1' : macro_f1,\n","      'macro_f1_pos_neg' : macro_f1_pos_neg,  \n","      'macro_precision': macro_precision,\n","      'macro_recall': macro_recall,\n","      'accuracy': acc\n","  }"],"execution_count":24,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GnqiZOT37ByE"},"source":["# HyperParameter Search"]},{"cell_type":"markdown","metadata":{"id":"bJif-78C6Kmn"},"source":["you can change the batch size and gradient accumulation from here\n","\n"]},{"cell_type":"code","metadata":{"id":"L3Z_kPB-dE_w","executionInfo":{"status":"ok","timestamp":1622195986305,"user_tz":-180,"elapsed":14,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.lr_scheduler_type = 'cosine'\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000\n","# training_args.save_steps = \n","#training_args.eval_steps = \n","training_args.disable_tqdm = True\n","# print(\"Logging Step:\", training_args.logging_steps)\n","# print(\"Eval Step:\",training_args.eval_steps)"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"id":"KeqRACPYheeb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622195986305,"user_tz":-180,"elapsed":14,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"0e67f661-3bd3-446b-f664-929a1c8a2adb"},"source":["steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)"],"execution_count":26,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o8HOnY6odcwG","colab":{"base_uri":"https://localhost:8080/","height":171,"referenced_widgets":["fe8cc562fdcd4892b130460bc0672d22","a3d157180fc2406eaa60f642507ab84f","61e56109eb0a46a8a7d5bc5deaad3bfc","db84499b7cf84edb9278c796db7575ad","13404c41a83f408aa73d9c8018b32d89","7bc28b7590c2479bbcfd33e68c0fee81","091ae36670e14df8bb08eae376fd5a74","57af7013a0834e0298574374c20a075e"]},"executionInfo":{"status":"ok","timestamp":1622196049078,"user_tz":-180,"elapsed":62785,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"13aec750-f2fc-4660-bcbd-d99b7270de09"},"source":["trainer = Trainer(\n","    args=training_args,\n","    train_dataset=train_dataset, \n","    eval_dataset=valid_dataset, \n","    model_init=model_init,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":27,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"fe8cc562fdcd4892b130460bc0672d22","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=445015160.0, style=ProgressStyle(descri…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.decoder.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"AFZ94M7Rzkhh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622196049081,"user_tz":-180,"elapsed":25,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"2c33702f-ab6c-41de-a46e-43b7f658477d"},"source":["def my_hp_space(trial):\n","    return {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 2e-5, 7e-5, step=1e-5),\n","        \"seed\": trial.suggest_categorical(\"seed\", [0, 1, 42, 666, 123, 12345]),\n","        \"warmup_steps\": trial.suggest_int(\"warmup_steps\",0,total_steps*0.1,step=total_steps*0.1*0.5)\n","    }\n","\n","search_space = {\n","    \"learning_rate\":  list(np.arange(2e-5, 7e-5, 1e-5)),\n","    \"seed\":  [0, 1, 42, 666, 123, 12345],\n","    \"warmup_steps\": list(range(0, int((total_steps)*0.1)+1, int(total_steps*0.1*0.5)))\n","}\n","search_space"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'learning_rate': [2e-05,\n","  3.0000000000000004e-05,\n","  4.000000000000001e-05,\n","  5.000000000000001e-05,\n","  6.000000000000001e-05],\n"," 'seed': [0, 1, 42, 666, 123, 12345],\n"," 'warmup_steps': [0, 87, 174]}"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"PgfU2UVzfS_A","executionInfo":{"status":"ok","timestamp":1622196049082,"user_tz":-180,"elapsed":19,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["def my_objective(metrics):\n","    return metrics['eval_macro_f1']"],"execution_count":29,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nc4gOvtE66Mj"},"source":["choose a study name to save it on disk"]},{"cell_type":"code","metadata":{"id":"NSGLnBKv64sZ","executionInfo":{"status":"ok","timestamp":1622196049083,"user_tz":-180,"elapsed":18,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["# name = \"qarib-semeval\""],"execution_count":30,"outputs":[]},{"cell_type":"code","metadata":{"id":"7l821sW7fdaY","executionInfo":{"status":"ok","timestamp":1622196049084,"user_tz":-180,"elapsed":19,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["# best_run = trainer.hyperparameter_search(direction=\"maximize\",\n","#                                          hp_space=my_hp_space,\n","#                                          compute_objective=my_objective,\n","#                                          n_trials=None,\n","#                                          pruner=optuna.pruners.NopPruner(),\n","#                                          sampler=optuna.samplers.GridSampler(search_space),\n","#                                          study_name=name,\n","#                                          storage=\"sqlite:////content/drive/MyDrive/{}.db\".format(name),\n","#                                          load_if_exists=False # you can change this to true, for continuing the search\n","#                                          )"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"id":"OVwfM9ZJf12t","executionInfo":{"status":"ok","timestamp":1622196049085,"user_tz":-180,"elapsed":19,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}}},"source":["# best_run"],"execution_count":32,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vTmvFEs41WkV"},"source":["#Regular Training"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTLYpWADhZPq","executionInfo":{"status":"ok","timestamp":1622196049086,"user_tz":-180,"elapsed":19,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"467fb576-caab-4a2b-8932-5dd4808b2259"},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.learning_rate = 5e-5\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","\n","\n","steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)\n","#Warmup_ratio\n","warmup_ratio = 0.1\n","training_args.warmup_steps = total_steps*warmup_ratio # or you can set the warmup steps directly \n","\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000 #don't want to save any model, there is probably a better way to do this :)\n","training_args.seed = 42\n","training_args.disable_tqdm = False\n","training_args.lr_scheduler_type = 'cosine'"],"execution_count":33,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"V_oGjIC-7Vow"},"source":["This paert allows you to do a regular training with no hyper parameter optimization"]},{"cell_type":"code","metadata":{"id":"Ro5BW5ak4uc1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1622196054682,"user_tz":-180,"elapsed":5611,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"a110651e-93b2-4e87-a84c-cf9528f54389"},"source":["trainer = Trainer(\n","    model = model_init(),\n","    args = training_args,\n","    train_dataset = train_dataset,\n","    eval_dataset=valid_dataset,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":34,"outputs":[{"output_type":"stream","text":["Some weights of the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.decoder.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"yx336O3J2SdQ","colab":{"base_uri":"https://localhost:8080/","height":528},"outputId":"101b91f2-c21f-4777-cc42-7432dae1639f"},"source":["trainer.train()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","        </style>\n","      \n","      <progress value='508' max='1744' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [ 508/1744 45:06 < 1:50:11, 0.19 it/s, Epoch 2.32/8]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Macro F1</th>\n","      <th>Macro F1 Pos Neg</th>\n","      <th>Macro Precision</th>\n","      <th>Macro Recall</th>\n","      <th>Accuracy</th>\n","      <th>Runtime</th>\n","      <th>Samples Per Second</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>No log</td>\n","      <td>0.201396</td>\n","      <td>0.861840</td>\n","      <td>0.861840</td>\n","      <td>0.922347</td>\n","      <td>0.822910</td>\n","      <td>0.928000</td>\n","      <td>55.273800</td>\n","      <td>18.092000</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>No log</td>\n","      <td>0.196770</td>\n","      <td>0.886226</td>\n","      <td>0.886226</td>\n","      <td>0.891529</td>\n","      <td>0.881171</td>\n","      <td>0.934000</td>\n","      <td>55.251600</td>\n","      <td>18.099000</td>\n","    </tr>\n","  </tbody>\n","</table><p>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.91      0.66      0.77       179\n","           1       0.93      0.99      0.96       821\n","\n","    accuracy                           0.93      1000\n","   macro avg       0.92      0.82      0.86      1000\n","weighted avg       0.93      0.93      0.92      1000\n","\n","[[118  61]\n"," [ 11 810]]\n","              precision    recall  f1-score   support\n","\n","           0       0.83      0.80      0.81       179\n","           1       0.96      0.96      0.96       821\n","\n","    accuracy                           0.93      1000\n","   macro avg       0.89      0.88      0.89      1000\n","weighted avg       0.93      0.93      0.93      1000\n","\n","[[143  36]\n"," [ 30 791]]\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"agqaiJStrc_w"},"source":["trainer.evaluate(test_dataset)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Seyz8Yaj2ZCK"},"source":["trainer.save_model(\"QARIB MODEL\")"],"execution_count":null,"outputs":[]}]}