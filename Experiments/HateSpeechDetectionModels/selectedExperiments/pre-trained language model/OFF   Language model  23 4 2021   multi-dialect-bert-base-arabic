{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"OFF | Language model |23/4/2021 | multi-dialect-bert-base-arabic ","provenance":[{"file_id":"1IDHwF_W9hqcsJOqSi69nUjwZDILpkZUn","timestamp":1620340263405},{"file_id":"1mwyOGZsoZeODQ1c8n34oiekc9byIcv4N","timestamp":1619191857227},{"file_id":"1P9iQHtUH5KUbTVtp8B4-AopZzEEPE0lw","timestamp":1618868148454}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"67f939b507b74ac0a5af42c51f75ec1b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_3d6179df946140688097191ad92e73ce","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_9930f8f2deaa4bb5990eca9d11168e86","IPY_MODEL_76224a17c54b4449bdf0c01eb08dcd70"]}},"3d6179df946140688097191ad92e73ce":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9930f8f2deaa4bb5990eca9d11168e86":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_0a2ee0ab669d475e88db505ea5303572","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":456,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":456,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_c571cf7b046c4e919cee1703688c5eb9"}},"76224a17c54b4449bdf0c01eb08dcd70":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_262751fe9b8f46b99b3bedea6271eb3a","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 456/456 [00:00&lt;00:00, 4.56kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_3cf8f837bfcd4370ba15f276dc526080"}},"0a2ee0ab669d475e88db505ea5303572":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"c571cf7b046c4e919cee1703688c5eb9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"262751fe9b8f46b99b3bedea6271eb3a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"3cf8f837bfcd4370ba15f276dc526080":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"0be34223498647d788403e916c7347df":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_d1ba5440aad040589623102790eca00b","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_2c7a1a47f0d244c5929bf434df744c8d","IPY_MODEL_59817af4ad6b459196e45d580069748b"]}},"d1ba5440aad040589623102790eca00b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2c7a1a47f0d244c5929bf434df744c8d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_586faaa318bb464487eb40504fa10f0e","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":334032,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":334032,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_aefae8037e1541c788fe9616aff5187e"}},"59817af4ad6b459196e45d580069748b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_71825b34afd24448ba753cb31999ba87","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 334k/334k [00:00&lt;00:00, 1.95MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_bb6c381c2f0b46d1a255d7ead41b0cb8"}},"586faaa318bb464487eb40504fa10f0e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"aefae8037e1541c788fe9616aff5187e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"71825b34afd24448ba753cb31999ba87":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"bb6c381c2f0b46d1a255d7ead41b0cb8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"86d842c8461341e6985cc08d288659ed":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_fac62a8d7af245319f370e1fe225c1b9","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_46d89f069fac4ceb8a1597592b9bf5d3","IPY_MODEL_bddb273d3b3d405eb67869bc6aebf0fe"]}},"fac62a8d7af245319f370e1fe225c1b9":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"46d89f069fac4ceb8a1597592b9bf5d3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_87452a788c6f40b0aa860732e5dd95fc","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":445015160,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":445015160,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_02a53c2a7bfb4912a2e64f24eca77f63"}},"bddb273d3b3d405eb67869bc6aebf0fe":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_b1bb6e3eac954d11bf6ab14079e8b2c6","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 445M/445M [00:08&lt;00:00, 51.9MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_30abc15aadac4e1e9fc3c33ad477a5b1"}},"87452a788c6f40b0aa860732e5dd95fc":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"02a53c2a7bfb4912a2e64f24eca77f63":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b1bb6e3eac954d11bf6ab14079e8b2c6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"30abc15aadac4e1e9fc3c33ad477a5b1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"g4mZ8KYblg-g"},"source":["#installing dependencies"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IbHOBNd4ETRD","executionInfo":{"status":"ok","timestamp":1620340424822,"user_tz":-180,"elapsed":28942,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"3dab23b7-65f5-4c97-d23b-8fbb98051c38"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C4tlwQ8si_FI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340429955,"user_tz":-180,"elapsed":4683,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"aac55ccc-7483-4fff-b4cf-6f8c2fc5d160"},"source":["import torch\n","\n","# If there's a GPU available...\n","if torch.cuda.is_available():    \n","\n","    # Tell PyTorch to use the GPU.    \n","    device = torch.device(\"cuda\")\n","\n","    print('There are %d GPU(s) available.' % torch.cuda.device_count())\n","\n","    print('We will use the GPU:', torch.cuda.get_device_name(0))\n","    !nvidia-smi\n","\n","# If not...\n","else:\n","    print('No GPU available, using the CPU instead.')\n","    device = torch.device(\"cpu\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["There are 1 GPU(s) available.\n","We will use the GPU: Tesla T4\n","Thu May  6 22:33:50 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 465.19.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   34C    P8    10W /  70W |      3MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y024z5AnlTLz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340446753,"user_tz":-180,"elapsed":19331,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"3a565d08-37e0-42c7-8530-230acd72384e"},"source":["!pip install -q optuna==2.3.0\n","!pip install -q transformers==4.2.1\n","# !pip install farasapy\n","# !pip install pyarabic\n","!git clone https://huggingface.co/bashar-talafha/multi-dialect-bert-base-arabic"],"execution_count":null,"outputs":[{"output_type":"stream","text":["\u001b[?25l\r\u001b[K     |█▎                              | 10kB 24.7MB/s eta 0:00:01\r\u001b[K     |██▌                             | 20kB 30.2MB/s eta 0:00:01\r\u001b[K     |███▉                            | 30kB 23.5MB/s eta 0:00:01\r\u001b[K     |█████                           | 40kB 24.9MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 51kB 20.1MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 61kB 20.9MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 71kB 18.2MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 81kB 19.1MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 92kB 18.0MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 102kB 17.6MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 112kB 17.6MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 122kB 17.6MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 133kB 17.6MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 143kB 17.6MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 153kB 17.6MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 163kB 17.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 174kB 17.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 184kB 17.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 194kB 17.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 204kB 17.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▋     | 215kB 17.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 225kB 17.6MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 235kB 17.6MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 245kB 17.6MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 256kB 17.6MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 266kB 17.6MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 81kB 11.1MB/s \n","\u001b[K     |████████████████████████████████| 174kB 59.1MB/s \n","\u001b[K     |████████████████████████████████| 143kB 55.6MB/s \n","\u001b[K     |████████████████████████████████| 51kB 8.6MB/s \n","\u001b[K     |████████████████████████████████| 112kB 60.6MB/s \n","\u001b[K     |████████████████████████████████| 81kB 11.2MB/s \n","\u001b[?25h  Building wheel for optuna (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[K     |████████████████████████████████| 1.8MB 17.0MB/s \n","\u001b[K     |████████████████████████████████| 2.9MB 54.7MB/s \n","\u001b[K     |████████████████████████████████| 901kB 56.6MB/s \n","\u001b[?25hCloning into 'multi-dialect-bert-base-arabic'...\n","remote: Enumerating objects: 15, done.\u001b[K\n","remote: Counting objects: 100% (15/15), done.\u001b[K\n","remote: Compressing objects: 100% (14/14), done.\u001b[K\n","remote: Total 15 (delta 3), reused 0 (delta 0)\n","Unpacking objects: 100% (15/15), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"krBvefg6l6vv"},"source":["!mkdir data\n","!mkdir train"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TVay9KamnC3I"},"source":["#Creating training datasets"]},{"cell_type":"code","metadata":{"id":"hr84ozGinCFh"},"source":["import pandas as pd\n","import numpy as np\n","import re\n","\n","from tqdm import tqdm_notebook as tqdm\n","from sklearn.model_selection import train_test_split\n","all_datasets= []"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8PhWP2JzrEci"},"source":["class Dataset:\n","    def __init__(\n","        self,\n","        name,\n","        train,\n","        valid,\n","        test,\n","        label_list,\n","        # label_list_valid,\n","        # label_list_test\n","    ):\n","        self.name = name\n","        self.train = train\n","        self.valid = valid\n","        self.test = test\n","        self.label_list = label_list\n","        # self.label_list_valid = label_list_valid\n","        # self.label_list_test = label_list_test"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"joWPYWGMqLau"},"source":["##Semeval Dataset "]},{"cell_type":"code","metadata":{"id":"lt_lGy85zuca"},"source":["text_cleaning_re = \"[a-zA-Z]|\\d+|[٠١٢٣٤٥٦٧٨٩]|[.#،<>:@,\\\\-_”“٪ًَ]\"\n","def preprocess(text):\n","  # search = [\"أ\",\"إ\",\"آ\",\"ة\",\"_\",\"-\",\"/\",\".\",\"،\",\" و \",\" يا \",'\"',\"ـ\",\"'\",\"ى\",\"\\\\\",'\\n', '\\t','&quot;','?','؟','!','#']\n","  # replace = [\"ا\",\"ا\",\"ا\",\"ه\",\" \",\" \",\"\",\"\",\"\",\" و\",\" يا\",\"\",\"\",\"\",\"ي\",\"\",' ', ' ',' ',' ? ',' ؟ ',' ! ',' ']\n","  #remove tashkeel\n","  p_tashkeel = re.compile(r'[\\u0617-\\u061A\\u064B-\\u0652]')\n","  text = re.sub(p_tashkeel,\"\", str(text))\n","  # text = text.replace('وو', 'و')\n","  # text = text.replace('يي', 'ي')\n","  # text = text.replace('اا', 'ا')\n","  text = re.sub(text_cleaning_re, ' ', str(text).lower()).strip()\n","  #remove longation\n","  text = re.sub(r'(.)\\1+', r'\\1\\1', str(text)) \n","  text = re.sub(\"[إأآا]\", \"ا\", str(text))\n","  text = re.sub(\"ى\", \"ي\", str(text))\n","  # text = re.sub(\"ؤ\", \"ء\", text)\n","  # text = re.sub(\"ئ\", \"ء\", text)\n","  text = re.sub(\"ة\", \"ه\", str(text))\n","  # for i in range(0, len(search)):\n","  #       text = text.replace(search[i], replace[i])\n","  \n","   #trim    \n","  # text = text.strip()\n","\n","  tokens = []\n","  for token in text.split():\n","    # if token not in stop_words:\n","      tokens.append(token)\n","  return \" \".join(tokens)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-6oL3qkXmOgJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340488846,"user_tz":-180,"elapsed":4232,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"557ff058-1f27-4b43-81f0-b684d48e3d78"},"source":["#load dataset\n","df_train = pd.read_excel(\"/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/train.xlsx\")\n","df_valid = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/dev.xlsx')\n","df_test_tweets = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/test.xlsx')\n","df_test_labels = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/offLabel.xlsx')\n","\n","#Rename Columns\n","df_train = df_train.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_valid = df_valid.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_test_labels=df_test_labels.rename(columns={'labels':'OFF_Labels'})\n","\n","df_test=pd.concat([df_test_tweets, df_test_labels], axis=1)\n","\n","#drop any row have null values\n","df_train=df_train.dropna(how='any',axis=0)\n","df_valid=df_valid.dropna(how='any',axis=0)\n","df_train.drop(columns=['HS_Labels'])\n","df_valid.drop(columns=['HS_Labels'])\n","\n","# ----------------------------------------------------------------- #\n","DATA_COLUMN = \"tweets\"\n","LABEL_COLUMN = \"OFF_Labels\"\n","\n","# ----------------------------------------------------------------- #\n","\n","df_train = df_train[['tweets','OFF_Labels']]\n","df_valid = df_valid[['tweets','OFF_Labels']]\n","df_test = df_test[['tweets','OFF_Labels']]\n","df_train.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_valid.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_test.columns = [DATA_COLUMN,LABEL_COLUMN]\n","# df_test_labels.columns = [LABEL_COLUMN]\n","print(df_train[LABEL_COLUMN].value_counts())\n","print(df_valid[LABEL_COLUMN].value_counts())\n","print(df_test[LABEL_COLUMN].value_counts())\n","\n","label_list_semeval = ['OFF','NOT_OFF']\n","data_semeval = Dataset(\"Data-semeval\", df_train, df_valid,df_test,label_list_semeval)\n","all_datasets.append(data_semeval)\n","\n","# ----------------------------------------------------------------- #\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["NOT_OFF    5576\n","OFF        1408\n","Name: OFF_Labels, dtype: int64\n","NOT_OFF    821\n","OFF        179\n","Name: OFF_Labels, dtype: int64\n","NOT_OFF    1598\n","OFF         402\n","Name: OFF_Labels, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-WYy5ikAs7l3","colab":{"base_uri":"https://localhost:8080/","height":687,"output_embedded_package_id":"1erK2VcAC5U_IYxZSh2Dcbk34J28yy5rI"},"executionInfo":{"status":"ok","timestamp":1620340493901,"user_tz":-180,"elapsed":3122,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"fd2bfdaa-f766-421b-a39a-31440318ea2b"},"source":["%load_ext google.colab.data_table\n","df_train"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Bcwdslw7v0Q8"},"source":["#Trainer"]},{"cell_type":"code","metadata":{"id":"HUn2RB6Bvrxj"},"source":["from transformers import AutoTokenizer, AutoModelForMaskedLM,BertForSequenceClassification,AutoModel\n","import numpy as np\n","from sklearn.metrics import classification_report, accuracy_score, f1_score, confusion_matrix, precision_score , recall_score\n","\n","from transformers import AutoConfig, AutoModelForSequenceClassification, AutoTokenizer, BertTokenizer\n","from transformers.data.processors import SingleSentenceClassificationProcessor\n","from transformers import Trainer , TrainingArguments\n","from transformers.trainer_utils import EvaluationStrategy\n","from transformers.data.processors.utils import InputFeatures\n","from torch.utils.data import Dataset\n","from torch.utils.data import DataLoader\n","from sklearn.utils import resample\n","import logging\n","import torch\n","import optuna \n","# from arabert.preprocess_arabert import preprocess, never_split_tokens\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KfNKr05tv7cA"},"source":["logging.basicConfig(level=logging.WARNING)\n","logger = logging.getLogger(__name__)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R4SGYoB2EDJD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340504198,"user_tz":-180,"elapsed":3563,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"e0e18dff-daaa-418c-c65d-a6e4a5dee62d"},"source":["for x in all_datasets:\n","  print(x.name)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Data-semeval\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"62Lma6tT5zJi"},"source":["You can choose which model, and dataset from here along with the max sentence length"]},{"cell_type":"code","metadata":{"id":"vzeVFoz1wDYf"},"source":["dataset_name = 'Data-semeval'\n","# model_name = 'qarib/bert-base-qarib'\n","# https://huggingface.co/UBC-NLP/MARBERT\n","model_name = 'bashar-talafha/multi-dialect-bert-base-arabic'\n","task_name = 'classification'\n","# num_labels = 2\n","max_len = 256\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tcbD2PCiX4vw","executionInfo":{"status":"ok","timestamp":1620340504200,"user_tz":-180,"elapsed":2582,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"b541bf38-b628-4ec8-f0de-90951c6f1e0b"},"source":["for d in all_datasets:\n","  if d.name==dataset_name:\n","    selected_dataset = d\n","    print('Dataset found \\n',dataset_name)\n","    break"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Dataset found \n"," Data-semeval\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PoyaRIGYCEzh"},"source":["# arabert_prep = ArabertPreprocessor(model_name.split(\"/\")[-1])\n","\n","selected_dataset.train[DATA_COLUMN] = selected_dataset.train[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","selected_dataset.valid[DATA_COLUMN] = selected_dataset.valid[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","selected_dataset.test[DATA_COLUMN] = selected_dataset.test[DATA_COLUMN].apply(lambda x:  preprocess(x))  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WE_MmGDceJxj","executionInfo":{"status":"ok","timestamp":1620340530056,"user_tz":-180,"elapsed":818,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"8c8669d4-c83f-43de-f605-aa7c1ee61f24"},"source":["selected_dataset.train[DATA_COLUMN]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       الحمدلله يارب فوز مهم يا زمالك كل الدعم ليكم ي...\n","1                 فدوه يا بخت فدوه يا زمن واحد منكم يجيبه\n","2       يا رب يا واحد يا احد بحق يوم الاحد ان تهلك بني...\n","3       هوا الحريه يا وجع قلبي عليكي يا امي الله لا يح...\n","4               يا بكون بحياتك الاهم يا اما ما بدي اكون 🎼\n","                              ...                        \n","6995    يا حمار يا جاهل نسبه الباطل ما بتتحسبش و عاملي...\n","6996    كل زق يا طاقيه يا واطي يا حقير يا تافه يا سافل...\n","6997    يا كبير يا ممتع يا نجم لابد ان تعي جيدا اننا م...\n","6998            يا رب الاتحاد يفوز يا رب 😭😭 الاتحاد النصر\n","6999    يعز عليا ادخل الشارع وملاقيكش واقف مستنيني في ...\n","Name: tweets, Length: 6984, dtype: object"]},"metadata":{"tags":[]},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"4YS7XI2bZTyz"},"source":["class BERTDataset(Dataset):\n","    def __init__(self, text, target, model_name, max_len, label_map):\n","      super(BERTDataset).__init__()\n","      self.text = text\n","      self.target = target\n","      self.tokenizer_name = model_name\n","      self.tokenizer = AutoTokenizer.from_pretrained(model_name)\n","      self.max_len = max_len\n","      self.label_map = label_map\n","      \n","\n","    def __len__(self):\n","      return len(self.text)\n","\n","    def __getitem__(self,item):\n","      text = str(self.text[item])\n","      text = \" \".join(text.split())\n","\n","\n","        \n","      input_ids = self.tokenizer.encode(\n","          text,\n","          add_special_tokens=True,\n","          max_length=self.max_len,\n","          truncation='longest_first'\n","      )     \n","    \n","      attention_mask = [1] * len(input_ids)\n","\n","      # Zero-pad up to the sequence length.\n","      padding_length = self.max_len - len(input_ids)\n","      input_ids = input_ids + ([self.tokenizer.pad_token_id] * padding_length)\n","      attention_mask = attention_mask + ([0] * padding_length)    \n","      \n","      return InputFeatures(input_ids=input_ids, attention_mask=attention_mask, label=self.label_map[self.target[item]])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mciZOFz-amkV","colab":{"base_uri":"https://localhost:8080/","height":132,"referenced_widgets":["67f939b507b74ac0a5af42c51f75ec1b","3d6179df946140688097191ad92e73ce","9930f8f2deaa4bb5990eca9d11168e86","76224a17c54b4449bdf0c01eb08dcd70","0a2ee0ab669d475e88db505ea5303572","c571cf7b046c4e919cee1703688c5eb9","262751fe9b8f46b99b3bedea6271eb3a","3cf8f837bfcd4370ba15f276dc526080","0be34223498647d788403e916c7347df","d1ba5440aad040589623102790eca00b","2c7a1a47f0d244c5929bf434df744c8d","59817af4ad6b459196e45d580069748b","586faaa318bb464487eb40504fa10f0e","aefae8037e1541c788fe9616aff5187e","71825b34afd24448ba753cb31999ba87","bb6c381c2f0b46d1a255d7ead41b0cb8"]},"executionInfo":{"status":"ok","timestamp":1620340533294,"user_tz":-180,"elapsed":1934,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"67d8804e-7dc2-44dc-a286-972faaa2bfd7"},"source":["label_map = { v:index for index, v in enumerate(selected_dataset.label_list) }\n","print(label_map)\n","\n","train_dataset = BERTDataset(selected_dataset.train[DATA_COLUMN].to_list(),selected_dataset.train[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","valid_dataset = BERTDataset(selected_dataset.valid[DATA_COLUMN].to_list(),selected_dataset.valid[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","test_dataset = BERTDataset(selected_dataset.test[DATA_COLUMN].to_list(),selected_dataset.test[LABEL_COLUMN].to_list(),model_name,max_len,label_map)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'OFF': 0, 'NOT_OFF': 1}\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"67f939b507b74ac0a5af42c51f75ec1b","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=456.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"0be34223498647d788403e916c7347df","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=334032.0, style=ProgressStyle(descripti…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lt7l0IxjbmNu"},"source":["def model_init():\n","    return AutoModelForSequenceClassification.from_pretrained(model_name, return_dict=True, num_labels=len(label_map))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UYU6G4vWc5nz"},"source":["def compute_metrics(p): #p should be of type EvalPrediction\n","  preds = np.argmax(p.predictions, axis=1)\n","  assert len(preds) == len(p.label_ids)\n","  print(classification_report(p.label_ids,preds))\n","  print(confusion_matrix(p.label_ids,preds))\n","\n","  macro_f1_pos_neg = f1_score(p.label_ids,preds,average='macro',labels=[0,1])\n","  macro_f1 = f1_score(p.label_ids,preds,average='macro')\n","  macro_precision = precision_score(p.label_ids,preds,average='macro')\n","  macro_recall = recall_score(p.label_ids,preds,average='macro')\n","  acc = accuracy_score(p.label_ids,preds)\n","  return {\n","      'macro_f1' : macro_f1,\n","      'macro_f1_pos_neg' : macro_f1_pos_neg,  \n","      'macro_precision': macro_precision,\n","      'macro_recall': macro_recall,\n","      'accuracy': acc\n","  }"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GnqiZOT37ByE"},"source":["# HyperParameter Search"]},{"cell_type":"markdown","metadata":{"id":"bJif-78C6Kmn"},"source":["you can change the batch size and gradient accumulation from here\n","\n"]},{"cell_type":"code","metadata":{"id":"L3Z_kPB-dE_w"},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.lr_scheduler_type = 'cosine'\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000\n","# training_args.save_steps = \n","#training_args.eval_steps = \n","training_args.disable_tqdm = True\n","# print(\"Logging Step:\", training_args.logging_steps)\n","# print(\"Eval Step:\",training_args.eval_steps)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KeqRACPYheeb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340538868,"user_tz":-180,"elapsed":1655,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"7ac95c2a-6bf4-491b-e16a-d6dc2106b3ca"},"source":["steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o8HOnY6odcwG","colab":{"base_uri":"https://localhost:8080/","height":171,"referenced_widgets":["86d842c8461341e6985cc08d288659ed","fac62a8d7af245319f370e1fe225c1b9","46d89f069fac4ceb8a1597592b9bf5d3","bddb273d3b3d405eb67869bc6aebf0fe","87452a788c6f40b0aa860732e5dd95fc","02a53c2a7bfb4912a2e64f24eca77f63","b1bb6e3eac954d11bf6ab14079e8b2c6","30abc15aadac4e1e9fc3c33ad477a5b1"]},"executionInfo":{"status":"ok","timestamp":1620340561654,"user_tz":-180,"elapsed":24406,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"1fd7d2b1-0d06-48df-893e-c2d77f4d8a38"},"source":["trainer = Trainer(\n","    args=training_args,\n","    train_dataset=train_dataset, \n","    eval_dataset=valid_dataset, \n","    model_init=model_init,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"86d842c8461341e6985cc08d288659ed","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=445015160.0, style=ProgressStyle(descri…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.decoder.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"AFZ94M7Rzkhh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340561660,"user_tz":-180,"elapsed":24368,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"fe7df2e6-bac8-46dc-99c5-879ef3bd78d9"},"source":["def my_hp_space(trial):\n","    return {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 2e-5, 7e-5, step=1e-5),\n","        \"seed\": trial.suggest_categorical(\"seed\", [0, 1, 42, 666, 123, 12345]),\n","        \"warmup_steps\": trial.suggest_int(\"warmup_steps\",0,total_steps*0.1,step=total_steps*0.1*0.5)\n","    }\n","\n","search_space = {\n","    \"learning_rate\":  list(np.arange(2e-5, 7e-5, 1e-5)),\n","    \"seed\":  [0, 1, 42, 666, 123, 12345],\n","    \"warmup_steps\": list(range(0, int((total_steps)*0.1)+1, int(total_steps*0.1*0.5)))\n","}\n","search_space"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'learning_rate': [2e-05,\n","  3.0000000000000004e-05,\n","  4.000000000000001e-05,\n","  5.000000000000001e-05,\n","  6.000000000000001e-05],\n"," 'seed': [0, 1, 42, 666, 123, 12345],\n"," 'warmup_steps': [0, 87, 174]}"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"PgfU2UVzfS_A"},"source":["def my_objective(metrics):\n","    return metrics['eval_macro_f1']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nc4gOvtE66Mj"},"source":["choose a study name to save it on disk"]},{"cell_type":"code","metadata":{"id":"NSGLnBKv64sZ"},"source":["# name = \"qarib-semeval\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7l821sW7fdaY"},"source":["# best_run = trainer.hyperparameter_search(direction=\"maximize\",\n","#                                          hp_space=my_hp_space,\n","#                                          compute_objective=my_objective,\n","#                                          n_trials=None,\n","#                                          pruner=optuna.pruners.NopPruner(),\n","#                                          sampler=optuna.samplers.GridSampler(search_space),\n","#                                          study_name=name,\n","#                                          storage=\"sqlite:////content/drive/MyDrive/{}.db\".format(name),\n","#                                          load_if_exists=False # you can change this to true, for continuing the search\n","#                                          )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OVwfM9ZJf12t"},"source":["# best_run"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vTmvFEs41WkV"},"source":["#Regular Training"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTLYpWADhZPq","executionInfo":{"status":"ok","timestamp":1620340561664,"user_tz":-180,"elapsed":23888,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"c8517151-708b-4769-d8de-0d16610d458e"},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.learning_rate = 5e-5\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","\n","\n","steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)\n","#Warmup_ratio\n","warmup_ratio = 0.1\n","training_args.warmup_steps = total_steps*warmup_ratio # or you can set the warmup steps directly \n","\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000 #don't want to save any model, there is probably a better way to do this :)\n","training_args.seed = 42\n","training_args.disable_tqdm = False\n","training_args.lr_scheduler_type = 'cosine'"],"execution_count":null,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"V_oGjIC-7Vow"},"source":["This paert allows you to do a regular training with no hyper parameter optimization"]},{"cell_type":"code","metadata":{"id":"Ro5BW5ak4uc1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1620340706726,"user_tz":-180,"elapsed":3776,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"bafe6f0c-18aa-4ab7-fa07-3b7b7e95ac97"},"source":["trainer = Trainer(\n","    model = model_init(),\n","    args = training_args,\n","    train_dataset = train_dataset,\n","    eval_dataset=valid_dataset,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Some weights of the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.decoder.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bashar-talafha/multi-dialect-bert-base-arabic and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"yx336O3J2SdQ","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1620341716893,"user_tz":-180,"elapsed":1012827,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"f1ea0e76-0ad2-4cdc-816b-17fed51ccd11"},"source":["trainer.train()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","        </style>\n","      \n","      <progress value='1744' max='1744' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1744/1744 16:49, Epoch 7/8]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Macro F1</th>\n","      <th>Macro F1 Pos Neg</th>\n","      <th>Macro Precision</th>\n","      <th>Macro Recall</th>\n","      <th>Accuracy</th>\n","      <th>Runtime</th>\n","      <th>Samples Per Second</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>No log</td>\n","      <td>0.193746</td>\n","      <td>0.854100</td>\n","      <td>0.854100</td>\n","      <td>0.932563</td>\n","      <td>0.808586</td>\n","      <td>0.926000</td>\n","      <td>6.069900</td>\n","      <td>164.747000</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>No log</td>\n","      <td>0.194861</td>\n","      <td>0.884824</td>\n","      <td>0.884824</td>\n","      <td>0.883168</td>\n","      <td>0.886506</td>\n","      <td>0.932000</td>\n","      <td>6.243800</td>\n","      <td>160.160000</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.203600</td>\n","      <td>0.295160</td>\n","      <td>0.882876</td>\n","      <td>0.882876</td>\n","      <td>0.882046</td>\n","      <td>0.883712</td>\n","      <td>0.931000</td>\n","      <td>6.255700</td>\n","      <td>159.854000</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.203600</td>\n","      <td>0.331125</td>\n","      <td>0.888578</td>\n","      <td>0.888578</td>\n","      <td>0.913266</td>\n","      <td>0.868317</td>\n","      <td>0.938000</td>\n","      <td>6.252600</td>\n","      <td>159.934000</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.034700</td>\n","      <td>0.421071</td>\n","      <td>0.901109</td>\n","      <td>0.901109</td>\n","      <td>0.884135</td>\n","      <td>0.921349</td>\n","      <td>0.939000</td>\n","      <td>6.267600</td>\n","      <td>159.549000</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.034700</td>\n","      <td>0.428551</td>\n","      <td>0.899067</td>\n","      <td>0.899067</td>\n","      <td>0.888794</td>\n","      <td>0.910427</td>\n","      <td>0.939000</td>\n","      <td>6.267400</td>\n","      <td>159.556000</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>0.002700</td>\n","      <td>0.435548</td>\n","      <td>0.897482</td>\n","      <td>0.897482</td>\n","      <td>0.899246</td>\n","      <td>0.895746</td>\n","      <td>0.940000</td>\n","      <td>6.268800</td>\n","      <td>159.520000</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>0.002700</td>\n","      <td>0.435982</td>\n","      <td>0.897482</td>\n","      <td>0.897482</td>\n","      <td>0.899246</td>\n","      <td>0.895746</td>\n","      <td>0.940000</td>\n","      <td>6.269800</td>\n","      <td>159.494000</td>\n","    </tr>\n","  </tbody>\n","</table><p>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.94      0.63      0.75       179\n","           1       0.92      0.99      0.96       821\n","\n","    accuracy                           0.93      1000\n","   macro avg       0.93      0.81      0.85      1000\n","weighted avg       0.93      0.93      0.92      1000\n","\n","[[112  67]\n"," [  7 814]]\n","              precision    recall  f1-score   support\n","\n","           0       0.81      0.82      0.81       179\n","           1       0.96      0.96      0.96       821\n","\n","    accuracy                           0.93      1000\n","   macro avg       0.88      0.89      0.88      1000\n","weighted avg       0.93      0.93      0.93      1000\n","\n","[[146  33]\n"," [ 35 786]]\n","              precision    recall  f1-score   support\n","\n","           0       0.81      0.81      0.81       179\n","           1       0.96      0.96      0.96       821\n","\n","    accuracy                           0.93      1000\n","   macro avg       0.88      0.88      0.88      1000\n","weighted avg       0.93      0.93      0.93      1000\n","\n","[[145  34]\n"," [ 35 786]]\n","              precision    recall  f1-score   support\n","\n","           0       0.88      0.76      0.81       179\n","           1       0.95      0.98      0.96       821\n","\n","    accuracy                           0.94      1000\n","   macro avg       0.91      0.87      0.89      1000\n","weighted avg       0.94      0.94      0.94      1000\n","\n","[[136  43]\n"," [ 19 802]]\n","              precision    recall  f1-score   support\n","\n","           0       0.79      0.89      0.84       179\n","           1       0.98      0.95      0.96       821\n","\n","    accuracy                           0.94      1000\n","   macro avg       0.88      0.92      0.90      1000\n","weighted avg       0.94      0.94      0.94      1000\n","\n","[[160  19]\n"," [ 42 779]]\n","              precision    recall  f1-score   support\n","\n","           0       0.81      0.87      0.84       179\n","           1       0.97      0.95      0.96       821\n","\n","    accuracy                           0.94      1000\n","   macro avg       0.89      0.91      0.90      1000\n","weighted avg       0.94      0.94      0.94      1000\n","\n","[[155  24]\n"," [ 37 784]]\n","              precision    recall  f1-score   support\n","\n","           0       0.84      0.83      0.83       179\n","           1       0.96      0.96      0.96       821\n","\n","    accuracy                           0.94      1000\n","   macro avg       0.90      0.90      0.90      1000\n","weighted avg       0.94      0.94      0.94      1000\n","\n","[[148  31]\n"," [ 29 792]]\n","              precision    recall  f1-score   support\n","\n","           0       0.84      0.83      0.83       179\n","           1       0.96      0.96      0.96       821\n","\n","    accuracy                           0.94      1000\n","   macro avg       0.90      0.90      0.90      1000\n","weighted avg       0.94      0.94      0.94      1000\n","\n","[[148  31]\n"," [ 29 792]]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["TrainOutput(global_step=1744, training_loss=0.06915904990816062, metrics={'train_runtime': 1010.1879, 'train_samples_per_second': 1.726, 'total_flos': 9491885912137728, 'epoch': 8.0})"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"agqaiJStrc_w","colab":{"base_uri":"https://localhost:8080/","height":377},"executionInfo":{"status":"ok","timestamp":1620341729527,"user_tz":-180,"elapsed":1024904,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"60906c9e-730a-4f79-f14e-828ce2ecb4d7"},"source":["trainer.evaluate(test_dataset)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","        </style>\n","      \n","      <progress value='125' max='125' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [125/125 00:12]\n","    </div>\n","    "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.86      0.82      0.84       402\n","           1       0.95      0.97      0.96      1598\n","\n","    accuracy                           0.94      2000\n","   macro avg       0.91      0.89      0.90      2000\n","weighted avg       0.94      0.94      0.94      2000\n","\n","[[ 328   74]\n"," [  52 1546]]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["{'epoch': 8.0,\n"," 'eval_accuracy': 0.937,\n"," 'eval_loss': 0.465999573469162,\n"," 'eval_macro_f1': 0.8998599629005006,\n"," 'eval_macro_f1_pos_neg': 0.8998599629005006,\n"," 'eval_macro_precision': 0.9087394411955816,\n"," 'eval_macro_recall': 0.8916898610825721,\n"," 'eval_runtime': 12.5034,\n"," 'eval_samples_per_second': 159.956}"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"Seyz8Yaj2ZCK"},"source":["trainer.save_model(\"QARIB MODEL\")"],"execution_count":null,"outputs":[]}]}