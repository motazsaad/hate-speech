{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"HS | Language model | 20/4/2021  | MARBERT ","provenance":[{"file_id":"1P9iQHtUH5KUbTVtp8B4-AopZzEEPE0lw","timestamp":1618868148454}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"d73b09d9a890477d8175ed3d77482622":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_29e5179578124a89bb841b604f511f69","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_dea2867e666942008735b83af033794d","IPY_MODEL_f60e833062d64812962778b2c6396981"]}},"29e5179578124a89bb841b604f511f69":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"dea2867e666942008735b83af033794d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_69f6b9dc55a34d8d87cbec4edfaf5e86","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":701,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":701,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0f42bc9c63a842f9a3e66555dc31cf1b"}},"f60e833062d64812962778b2c6396981":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_65a3dcd04b314a3f882009c4fe54074b","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 701/701 [00:02&lt;00:00, 285B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_0716ac11d31e4b268aceb9febd1481bb"}},"69f6b9dc55a34d8d87cbec4edfaf5e86":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"0f42bc9c63a842f9a3e66555dc31cf1b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"65a3dcd04b314a3f882009c4fe54074b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"0716ac11d31e4b268aceb9febd1481bb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"2f412705fcb547709f8ec9f11d53b065":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_27c04be5ced74e4ea17a40f7f54b9ae1","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_674b948017924e01ab6c55b18a1da1b4","IPY_MODEL_a5493ea0b6e743798201590737930150"]}},"27c04be5ced74e4ea17a40f7f54b9ae1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"674b948017924e01ab6c55b18a1da1b4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_e18c25d19728486fbdd2a6bf1b772560","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":1099714,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":1099714,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_6e200377648b4e3c814c1b11f150abcd"}},"a5493ea0b6e743798201590737930150":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_82380d69e77a4bb98d0cf487b507b5cd","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 1.10M/1.10M [00:01&lt;00:00, 596kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_755108493118483da0dbf61ab7de6d49"}},"e18c25d19728486fbdd2a6bf1b772560":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"6e200377648b4e3c814c1b11f150abcd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"82380d69e77a4bb98d0cf487b507b5cd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"755108493118483da0dbf61ab7de6d49":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"9e83e503bdc74ccca4bb2c209fb5afab":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_61c30fe313824feda5014719b9c52fed","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_349c5e50ad1749a8be7a36446f2bd403","IPY_MODEL_f2965b516fdd4323a2d501d1db05523e"]}},"61c30fe313824feda5014719b9c52fed":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"349c5e50ad1749a8be7a36446f2bd403":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_9cfb87c18e8f4a828f2bfbc9466dfa77","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":112,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":112,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_f870aaf0241543fca25e260f99518515"}},"f2965b516fdd4323a2d501d1db05523e":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_cdf0bc78470f4ae782e4290db94f2ba9","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 112/112 [00:00&lt;00:00, 186B/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_e3d8129dbd7e4b2bb00fa303163dd999"}},"9cfb87c18e8f4a828f2bfbc9466dfa77":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"f870aaf0241543fca25e260f99518515":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"cdf0bc78470f4ae782e4290db94f2ba9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"e3d8129dbd7e4b2bb00fa303163dd999":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"157fda34d1bc45d8a538d319b1ffee4a":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_a095acb1e056436e8812133e6ed45f03","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_dd5f6ddf1ff747699d84a5e93e27034c","IPY_MODEL_153daa0ebcd34364b3c83f1b074773b5"]}},"a095acb1e056436e8812133e6ed45f03":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"dd5f6ddf1ff747699d84a5e93e27034c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_03cb42fac3cd4fb0be5d79e4ee7142eb","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":376,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":376,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_201b1a986aae4582b511aab101d375b5"}},"153daa0ebcd34364b3c83f1b074773b5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_65155853cbb848559f8e363e56b4fed9","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 376/376 [00:00&lt;00:00, 2.77kB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_369c715b5e71493c9697323fd463a32b"}},"03cb42fac3cd4fb0be5d79e4ee7142eb":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"201b1a986aae4582b511aab101d375b5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"65155853cbb848559f8e363e56b4fed9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"369c715b5e71493c9697323fd463a32b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"6d50c65a38aa4c98a18507eb6fb9343c":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","state":{"_view_name":"HBoxView","_dom_classes":[],"_model_name":"HBoxModel","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.5.0","box_style":"","layout":"IPY_MODEL_eaef6d0db318490b8e652d3b2f81e24e","_model_module":"@jupyter-widgets/controls","children":["IPY_MODEL_b5839a9217ac492bb8ae289d3b51e815","IPY_MODEL_0bf3f0a3c5d14b54ba4103fb0f2a8d97"]}},"eaef6d0db318490b8e652d3b2f81e24e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"b5839a9217ac492bb8ae289d3b51e815":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","state":{"_view_name":"ProgressView","style":"IPY_MODEL_4d3b3d75d4224fd1aa60aa54f75e8615","_dom_classes":[],"description":"Downloading: 100%","_model_name":"FloatProgressModel","bar_style":"success","max":654186400,"_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":654186400,"_view_count":null,"_view_module_version":"1.5.0","orientation":"horizontal","min":0,"description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_89a9da4d5e51437cab4355a49d906f0f"}},"0bf3f0a3c5d14b54ba4103fb0f2a8d97":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","state":{"_view_name":"HTMLView","style":"IPY_MODEL_a715c74dd0364c4da55595e726c796cd","_dom_classes":[],"description":"","_model_name":"HTMLModel","placeholder":"​","_view_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","value":" 654M/654M [00:12&lt;00:00, 52.2MB/s]","_view_count":null,"_view_module_version":"1.5.0","description_tooltip":null,"_model_module":"@jupyter-widgets/controls","layout":"IPY_MODEL_d955909759264d3a9331c918bd91cf4e"}},"4d3b3d75d4224fd1aa60aa54f75e8615":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","state":{"_view_name":"StyleView","_model_name":"ProgressStyleModel","description_width":"initial","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","bar_color":null,"_model_module":"@jupyter-widgets/controls"}},"89a9da4d5e51437cab4355a49d906f0f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}},"a715c74dd0364c4da55595e726c796cd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","state":{"_view_name":"StyleView","_model_name":"DescriptionStyleModel","description_width":"","_view_module":"@jupyter-widgets/base","_model_module_version":"1.5.0","_view_count":null,"_view_module_version":"1.2.0","_model_module":"@jupyter-widgets/controls"}},"d955909759264d3a9331c918bd91cf4e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","state":{"_view_name":"LayoutView","grid_template_rows":null,"right":null,"justify_content":null,"_view_module":"@jupyter-widgets/base","overflow":null,"_model_module_version":"1.2.0","_view_count":null,"flex_flow":null,"width":null,"min_width":null,"border":null,"align_items":null,"bottom":null,"_model_module":"@jupyter-widgets/base","top":null,"grid_column":null,"overflow_y":null,"overflow_x":null,"grid_auto_flow":null,"grid_area":null,"grid_template_columns":null,"flex":null,"_model_name":"LayoutModel","justify_items":null,"grid_row":null,"max_height":null,"align_content":null,"visibility":null,"align_self":null,"height":null,"min_height":null,"padding":null,"grid_auto_rows":null,"grid_gap":null,"max_width":null,"order":null,"_view_module_version":"1.2.0","grid_template_areas":null,"object_position":null,"object_fit":null,"grid_auto_columns":null,"margin":null,"display":null,"left":null}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"g4mZ8KYblg-g"},"source":["#installing dependencies"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IbHOBNd4ETRD","executionInfo":{"status":"ok","timestamp":1619169354639,"user_tz":-180,"elapsed":25429,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"79ef42d4-d42f-426e-f5b5-3982fc97d3dc"},"source":["from google.colab import drive\n","drive.mount('/content/drive')\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"C4tlwQ8si_FI","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169375010,"user_tz":-180,"elapsed":4756,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"0da06bc4-8515-4146-c9c3-abf89116a680"},"source":["import torch\n","\n","# If there's a GPU available...\n","if torch.cuda.is_available():    \n","\n","    # Tell PyTorch to use the GPU.    \n","    device = torch.device(\"cuda\")\n","\n","    print('There are %d GPU(s) available.' % torch.cuda.device_count())\n","\n","    print('We will use the GPU:', torch.cuda.get_device_name(0))\n","    !nvidia-smi\n","\n","# If not...\n","else:\n","    print('No GPU available, using the CPU instead.')\n","    device = torch.device(\"cpu\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["There are 1 GPU(s) available.\n","We will use the GPU: Tesla T4\n","Fri Apr 23 09:16:13 2021       \n","+-----------------------------------------------------------------------------+\n","| NVIDIA-SMI 465.19.01    Driver Version: 460.32.03    CUDA Version: 11.2     |\n","|-------------------------------+----------------------+----------------------+\n","| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\n","| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\n","|                               |                      |               MIG M. |\n","|===============================+======================+======================|\n","|   0  Tesla T4            Off  | 00000000:00:04.0 Off |                    0 |\n","| N/A   61C    P8    11W /  70W |      3MiB / 15109MiB |      0%      Default |\n","|                               |                      |                  N/A |\n","+-------------------------------+----------------------+----------------------+\n","                                                                               \n","+-----------------------------------------------------------------------------+\n","| Processes:                                                                  |\n","|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\n","|        ID   ID                                                   Usage      |\n","|=============================================================================|\n","|  No running processes found                                                 |\n","+-----------------------------------------------------------------------------+\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"y024z5AnlTLz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169398803,"user_tz":-180,"elapsed":28540,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"f1e2c463-7a21-4be7-eb52-3781132b64c8"},"source":["!pip install optuna==2.3.0\n","!pip install transformers==4.2.1\n","!pip install farasapy\n","!pip install pyarabic\n","!git clone https://huggingface.co/UBC-NLP/MARBERT"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting optuna==2.3.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/87/10/06b58f4120f26b603d905a594650440ea1fd74476b8b360dbf01e111469b/optuna-2.3.0.tar.gz (258kB)\n","\r\u001b[K     |█▎                              | 10kB 22.8MB/s eta 0:00:01\r\u001b[K     |██▌                             | 20kB 14.7MB/s eta 0:00:01\r\u001b[K     |███▉                            | 30kB 13.4MB/s eta 0:00:01\r\u001b[K     |█████                           | 40kB 12.6MB/s eta 0:00:01\r\u001b[K     |██████▍                         | 51kB 8.8MB/s eta 0:00:01\r\u001b[K     |███████▋                        | 61kB 7.9MB/s eta 0:00:01\r\u001b[K     |████████▉                       | 71kB 9.0MB/s eta 0:00:01\r\u001b[K     |██████████▏                     | 81kB 10.0MB/s eta 0:00:01\r\u001b[K     |███████████▍                    | 92kB 9.2MB/s eta 0:00:01\r\u001b[K     |████████████▊                   | 102kB 8.4MB/s eta 0:00:01\r\u001b[K     |██████████████                  | 112kB 8.4MB/s eta 0:00:01\r\u001b[K     |███████████████▏                | 122kB 8.4MB/s eta 0:00:01\r\u001b[K     |████████████████▌               | 133kB 8.4MB/s eta 0:00:01\r\u001b[K     |█████████████████▊              | 143kB 8.4MB/s eta 0:00:01\r\u001b[K     |███████████████████             | 153kB 8.4MB/s eta 0:00:01\r\u001b[K     |████████████████████▎           | 163kB 8.4MB/s eta 0:00:01\r\u001b[K     |█████████████████████▌          | 174kB 8.4MB/s eta 0:00:01\r\u001b[K     |██████████████████████▉         | 184kB 8.4MB/s eta 0:00:01\r\u001b[K     |████████████████████████        | 194kB 8.4MB/s eta 0:00:01\r\u001b[K     |█████████████████████████▍      | 204kB 8.4MB/s eta 0:00:01\r\u001b[K     |██████████████████████████▋     | 215kB 8.4MB/s eta 0:00:01\r\u001b[K     |███████████████████████████▉    | 225kB 8.4MB/s eta 0:00:01\r\u001b[K     |█████████████████████████████▏  | 235kB 8.4MB/s eta 0:00:01\r\u001b[K     |██████████████████████████████▍ | 245kB 8.4MB/s eta 0:00:01\r\u001b[K     |███████████████████████████████▊| 256kB 8.4MB/s eta 0:00:01\r\u001b[K     |████████████████████████████████| 266kB 8.4MB/s \n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","    Preparing wheel metadata ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (4.41.1)\n","Collecting alembic\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/72/a4/97eb6273839655cac14947986fa7a5935350fcfd4fff872e9654264c82d8/alembic-1.5.8-py2.py3-none-any.whl (159kB)\n","\u001b[K     |████████████████████████████████| 163kB 16.3MB/s \n","\u001b[?25hRequirement already satisfied: sqlalchemy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (1.4.7)\n","Collecting cliff\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a2/d6/7d9acb68a77acd140be7fececb7f2701b2a29d2da9c54184cb8f93509590/cliff-3.7.0-py3-none-any.whl (80kB)\n","\u001b[K     |████████████████████████████████| 81kB 8.7MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (1.19.5)\n","Collecting colorlog\n","  Downloading https://files.pythonhosted.org/packages/32/e6/e9ddc6fa1104fda718338b341e4b3dc31cd8039ab29e52fc73b508515361/colorlog-5.0.1-py2.py3-none-any.whl\n","Requirement already satisfied: scipy!=1.4.0 in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (1.4.1)\n","Collecting cmaes>=0.6.0\n","  Downloading https://files.pythonhosted.org/packages/01/1f/43b01223a0366171f474320c6e966c39a11587287f098a5f09809b45e05f/cmaes-0.8.2-py3-none-any.whl\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (20.9)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from optuna==2.3.0) (1.0.1)\n","Requirement already satisfied: python-dateutil in /usr/local/lib/python3.7/dist-packages (from alembic->optuna==2.3.0) (2.8.1)\n","Collecting python-editor>=0.3\n","  Downloading https://files.pythonhosted.org/packages/c6/d3/201fc3abe391bbae6606e6f1d598c15d367033332bd54352b12f35513717/python_editor-1.0.4-py3-none-any.whl\n","Collecting Mako\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f3/54/dbc07fbb20865d3b78fdb7cf7fa713e2cba4f87f71100074ef2dc9f9d1f7/Mako-1.1.4-py2.py3-none-any.whl (75kB)\n","\u001b[K     |████████████████████████████████| 81kB 9.2MB/s \n","\u001b[?25hRequirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from sqlalchemy>=1.1.0->optuna==2.3.0) (3.10.1)\n","Requirement already satisfied: greenlet!=0.4.17; python_version >= \"3\" in /usr/local/lib/python3.7/dist-packages (from sqlalchemy>=1.1.0->optuna==2.3.0) (1.0.0)\n","Requirement already satisfied: PrettyTable>=0.7.2 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna==2.3.0) (2.1.0)\n","Collecting stevedore>=2.0.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/d4/49/b602307aeac3df3384ff1fcd05da9c0376c622a6c48bb5325f28ab165b57/stevedore-3.3.0-py3-none-any.whl (49kB)\n","\u001b[K     |████████████████████████████████| 51kB 7.5MB/s \n","\u001b[?25hRequirement already satisfied: PyYAML>=3.12 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna==2.3.0) (3.13)\n","Collecting pbr!=2.1.0,>=2.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fb/48/69046506f6ac61c1eaa9a0d42d22d54673b69e176d30ca98e3f61513e980/pbr-5.5.1-py2.py3-none-any.whl (106kB)\n","\u001b[K     |████████████████████████████████| 112kB 16.0MB/s \n","\u001b[?25hRequirement already satisfied: pyparsing>=2.1.0 in /usr/local/lib/python3.7/dist-packages (from cliff->optuna==2.3.0) (2.4.7)\n","Collecting cmd2>=1.0.0\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/15/8b/15061b32332bb35ea2a2f6263d0f616779d576e82739ec8e7fcf3c94abf5/cmd2-1.5.0-py3-none-any.whl (133kB)\n","\u001b[K     |████████████████████████████████| 143kB 16.3MB/s \n","\u001b[?25hRequirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil->alembic->optuna==2.3.0) (1.15.0)\n","Requirement already satisfied: MarkupSafe>=0.9.2 in /usr/local/lib/python3.7/dist-packages (from Mako->alembic->optuna==2.3.0) (1.1.1)\n","Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->sqlalchemy>=1.1.0->optuna==2.3.0) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->sqlalchemy>=1.1.0->optuna==2.3.0) (3.4.1)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.7/dist-packages (from PrettyTable>=0.7.2->cliff->optuna==2.3.0) (0.2.5)\n","Collecting pyperclip>=1.6\n","  Downloading https://files.pythonhosted.org/packages/a7/2c/4c64579f847bd5d539803c8b909e54ba087a79d01bb3aba433a95879a6c5/pyperclip-1.8.2.tar.gz\n","Collecting colorama>=0.3.7\n","  Downloading https://files.pythonhosted.org/packages/44/98/5b86278fbbf250d239ae0ecb724f8572af1c91f4a11edf4d36a206189440/colorama-0.4.4-py2.py3-none-any.whl\n","Requirement already satisfied: attrs>=16.3.0 in /usr/local/lib/python3.7/dist-packages (from cmd2>=1.0.0->cliff->optuna==2.3.0) (20.3.0)\n","Building wheels for collected packages: optuna\n","  Building wheel for optuna (PEP 517) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for optuna: filename=optuna-2.3.0-cp37-none-any.whl size=359761 sha256=1d321e2a842ea1f7b394b30aa10cd1d98cd81bccd79dff6e0b76c210a0c53e7c\n","  Stored in directory: /root/.cache/pip/wheels/fa/91/19/64b0ec6b964f89c0695a9dc6db6f851d0b54c5381a5c9cadfb\n","Successfully built optuna\n","Building wheels for collected packages: pyperclip\n","  Building wheel for pyperclip (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyperclip: filename=pyperclip-1.8.2-cp37-none-any.whl size=11107 sha256=52b3f9b303b72113689849d2b9fce64fd246bac276116bde2557f1c4124c0781\n","  Stored in directory: /root/.cache/pip/wheels/25/af/b8/3407109267803f4015e1ee2ff23be0c8c19ce4008665931ee1\n","Successfully built pyperclip\n","Installing collected packages: python-editor, Mako, alembic, pbr, stevedore, pyperclip, colorama, cmd2, cliff, colorlog, cmaes, optuna\n","Successfully installed Mako-1.1.4 alembic-1.5.8 cliff-3.7.0 cmaes-0.8.2 cmd2-1.5.0 colorama-0.4.4 colorlog-5.0.1 optuna-2.3.0 pbr-5.5.1 pyperclip-1.8.2 python-editor-1.0.4 stevedore-3.3.0\n","Collecting transformers==4.2.1\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/cd/40/866cbfac4601e0f74c7303d533a9c5d4a53858bd402e08e3e294dd271f25/transformers-4.2.1-py3-none-any.whl (1.8MB)\n","\u001b[K     |████████████████████████████████| 1.8MB 8.7MB/s \n","\u001b[?25hRequirement already satisfied: filelock in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (3.0.12)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (2019.12.20)\n","Collecting sacremoses\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/75/ee/67241dc87f266093c533a2d4d3d69438e57d7a90abb216fa076e7d475d4a/sacremoses-0.0.45-py3-none-any.whl (895kB)\n","\u001b[K     |████████████████████████████████| 901kB 46.3MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (1.19.5)\n","Collecting tokenizers==0.9.4\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/fb/36/59e4a62254c5fcb43894c6b0e9403ec6f4238cc2422a003ed2e6279a1784/tokenizers-0.9.4-cp37-cp37m-manylinux2010_x86_64.whl (2.9MB)\n","\u001b[K     |████████████████████████████████| 2.9MB 50.8MB/s \n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (4.41.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (20.9)\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (2.23.0)\n","Requirement already satisfied: importlib-metadata; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from transformers==4.2.1) (3.10.1)\n","Requirement already satisfied: click in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.2.1) (7.1.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.2.1) (1.15.0)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.7/dist-packages (from sacremoses->transformers==4.2.1) (1.0.1)\n","Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging->transformers==4.2.1) (2.4.7)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.2.1) (1.24.3)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.2.1) (3.0.4)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.2.1) (2020.12.5)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->transformers==4.2.1) (2.10)\n","Requirement already satisfied: typing-extensions>=3.6.4; python_version < \"3.8\" in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers==4.2.1) (3.7.4.3)\n","Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata; python_version < \"3.8\"->transformers==4.2.1) (3.4.1)\n","Installing collected packages: sacremoses, tokenizers, transformers\n","Successfully installed sacremoses-0.0.45 tokenizers-0.9.4 transformers-4.2.1\n","Collecting farasapy\n","  Downloading https://files.pythonhosted.org/packages/fb/69/39ead86569e95141eede67703a93585be8454a801b7aab93ad1a7f0a8375/farasapy-0.0.13-py3-none-any.whl\n","Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from farasapy) (2.23.0)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.7/dist-packages (from farasapy) (4.41.1)\n","Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->farasapy) (1.24.3)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->farasapy) (2020.12.5)\n","Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->farasapy) (3.0.4)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->farasapy) (2.10)\n","Installing collected packages: farasapy\n","Successfully installed farasapy-0.0.13\n","Collecting pyarabic\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/7b/e2/46728ec2f6fe14970de5c782346609f0636262c0941228f363710903aaa1/PyArabic-0.6.10.tar.gz (108kB)\n","\u001b[K     |████████████████████████████████| 112kB 8.6MB/s \n","\u001b[?25hBuilding wheels for collected packages: pyarabic\n","  Building wheel for pyarabic (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyarabic: filename=PyArabic-0.6.10-cp37-none-any.whl size=113324 sha256=ffc194a8beb18aa35a27494f7b5fccf1ec43fdf819e3a70a1ed801248bfd1c91\n","  Stored in directory: /root/.cache/pip/wheels/10/b8/f5/b7c1a50e6efb83544844f165a9b134afe7292585465e29b61d\n","Successfully built pyarabic\n","Installing collected packages: pyarabic\n","Successfully installed pyarabic-0.6.10\n","Cloning into 'MARBERT'...\n","remote: Enumerating objects: 38, done.\u001b[K\n","remote: Counting objects: 100% (38/38), done.\u001b[K\n","remote: Compressing objects: 100% (36/36), done.\u001b[K\n","remote: Total 38 (delta 15), reused 0 (delta 0)\u001b[K\n","Unpacking objects: 100% (38/38), done.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"krBvefg6l6vv"},"source":["!mkdir data\n","!mkdir train"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TVay9KamnC3I"},"source":["#Creating training datasets"]},{"cell_type":"code","metadata":{"id":"hr84ozGinCFh"},"source":["import pandas as pd\n","import numpy as np\n","import re\n","\n","from tqdm import tqdm_notebook as tqdm\n","from sklearn.model_selection import train_test_split\n","all_datasets= []"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"8PhWP2JzrEci"},"source":["class Dataset:\n","    def __init__(\n","        self,\n","        name,\n","        train,\n","        valid,\n","        test,\n","        label_list,\n","        # label_list_valid,\n","        # label_list_test\n","    ):\n","        self.name = name\n","        self.train = train\n","        self.valid = valid\n","        self.test = test\n","        self.label_list = label_list\n","        # self.label_list_valid = label_list_valid\n","        # self.label_list_test = label_list_test"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"joWPYWGMqLau"},"source":["##Semeval Dataset "]},{"cell_type":"code","metadata":{"id":"lt_lGy85zuca"},"source":["text_cleaning_re = \"[a-zA-Z]|\\d+|[٠١٢٣٤٥٦٧٨٩]|[.#،<>:@,\\\\-_”“٪ًَ]\"\n","def preprocess(text):\n","  # search = [\"أ\",\"إ\",\"آ\",\"ة\",\"_\",\"-\",\"/\",\".\",\"،\",\" و \",\" يا \",'\"',\"ـ\",\"'\",\"ى\",\"\\\\\",'\\n', '\\t','&quot;','?','؟','!','#']\n","  # replace = [\"ا\",\"ا\",\"ا\",\"ه\",\" \",\" \",\"\",\"\",\"\",\" و\",\" يا\",\"\",\"\",\"\",\"ي\",\"\",' ', ' ',' ',' ? ',' ؟ ',' ! ',' ']\n","  #remove tashkeel\n","  p_tashkeel = re.compile(r'[\\u0617-\\u061A\\u064B-\\u0652]')\n","  text = re.sub(p_tashkeel,\"\", str(text))\n","  # text = text.replace('وو', 'و')\n","  # text = text.replace('يي', 'ي')\n","  # text = text.replace('اا', 'ا')\n","  text = re.sub(text_cleaning_re, ' ', str(text).lower()).strip()\n","  #remove longation\n","  text = re.sub(r'(.)\\1+', r'\\1\\1', str(text)) \n","  text = re.sub(\"[إأآا]\", \"ا\", str(text))\n","  text = re.sub(\"ى\", \"ي\", str(text))\n","  # text = re.sub(\"ؤ\", \"ء\", text)\n","  # text = re.sub(\"ئ\", \"ء\", text)\n","  text = re.sub(\"ة\", \"ه\", str(text))\n","  # for i in range(0, len(search)):\n","  #       text = text.replace(search[i], replace[i])\n","  \n","   #trim    \n","  # text = text.strip()\n","\n","  tokens = []\n","  for token in text.split():\n","    # if token not in stop_words:\n","      tokens.append(token)\n","  return \" \".join(tokens)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DAmHDMa74_iw"},"source":["# df_test_labels"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"iShx1exg6j23"},"source":["# df_test = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/test.xlsx')\n","# df_test_labels = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/testLabels.xlsx')\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qmlLJRUH5oCD"},"source":["# f3 = df_test[[\"tweets\"]].merge(df_test_labels[[\"HS_Labels\"]], left_index=True)\n","  \n","# testAll"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mkr9X8_q47Jc"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-6oL3qkXmOgJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169402481,"user_tz":-180,"elapsed":32181,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"558d1b0a-ae9f-46e4-df69-732347a2cda8"},"source":["#load dataset\n","df_train = pd.read_excel(\"/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/train.xlsx\")\n","df_valid = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/dev.xlsx')\n","df_test_tweets = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/test.xlsx')\n","df_test_labels = pd.read_excel('/content/drive/MyDrive/MasterThesis/DataSet-forUsing/semeval2020/testLabels.xlsx')\n","\n","#Rename Columns\n","df_train = df_train.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_valid = df_valid.rename(columns={'off': 'OFF_Labels','hs': 'HS_Labels'})\n","df_test_labels=df_test_labels.rename(columns={'label':'HS_Labels'})\n","\n","df_test=pd.concat([df_test_tweets, df_test_labels], axis=1)\n","\n","#drop any row have null values\n","df_train=df_train.dropna(how='any',axis=0)\n","df_valid=df_valid.dropna(how='any',axis=0)\n","df_train.drop(columns=['OFF_Labels'])\n","df_valid.drop(columns=['OFF_Labels'])\n","df_test.drop(columns=['id'])\n","# df_train[\"tweets\"] = df_train[\"tweets\"].apply(lambda x : preprocess(x))\n","# df_train[\"HS_Labels\"] = df_train[\"HS_Labels\"].apply(lambda x : x.replace(\"NOT_HS\", '0'))\n","# df_train[\"HS_Labels\"] = df_train[\"HS_Labels\"].apply(lambda x : x.replace(\"HS\", '1'))\n","\n","\n","# df_valid[\"tweets\"] = df_valid[\"tweets\"].apply(lambda x : preprocess(x))\n","# df_valid[\"HS_Labels\"] = df_valid[\"HS_Labels\"].apply(lambda x : x.replace(\"NOT_HS\", '0'))\n","# df_valid[\"HS_Labels\"] = df_valid[\"HS_Labels\"].apply(lambda x : x.replace(\"HS\", '1'))\n","\n","# df_test[\"tweets\"] = df_test[\"tweets\"].apply(lambda x : preprocess(x))\n","\n","# print(df_train)\n","# ----------------------------------------------------------------- #\n","DATA_COLUMN = \"tweets\"\n","LABEL_COLUMN = \"HS_Labels\"\n","\n","# ----------------------------------------------------------------- #\n","\n","# x_train = df_train\n","# x_val = df_valid\n","# x_test = df_test\n","\n","# ----------------------------------------------------------------- #\n","\n","# x_train_w_eval = pd.concat([x_train, x_val], axis=0)\n","\n","# ----------------------------------------------------------------- #\n","\n","# x_train_w_eval.shape\n","\n","\n","df_train = df_train[['tweets','HS_Labels']]\n","df_valid = df_valid[['tweets','HS_Labels']]\n","df_test = df_test[['tweets','HS_Labels']]\n","df_train.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_valid.columns = [DATA_COLUMN, LABEL_COLUMN]\n","df_test.columns = [DATA_COLUMN,LABEL_COLUMN]\n","# df_test_labels.columns = [LABEL_COLUMN]\n","print(df_train[LABEL_COLUMN].value_counts())\n","print(df_valid[LABEL_COLUMN].value_counts())\n","print(df_test[LABEL_COLUMN].value_counts())\n","\n","\n","# label_map = {\n","#     'HS' : 0,\n","#     'NOT_HS' : 1\n","# }\n","\n","# df_AJGT[DATA_COLUMN] = df_AJGT[DATA_COLUMN].apply(lambda x: preprocess(x, do_farasa_tokenization=True , farasa=farasa_segmenter, use_farasapy = True))\n","# df_train[LABEL_COLUMN] = df_train[LABEL_COLUMN].apply(lambda x: label_map[x])\n","# df_valid[LABEL_COLUMN] = df_valid[LABEL_COLUMN].apply(lambda x: label_map[x])\n","# df_test_labels[LABEL_COLUMN] = df_test_labels[LABEL_COLUMN].apply(lambda x: label_map[x])\n","\n","# print(df_train[LABEL_COLUMN])\n","# print(df_valid[LABEL_COLUMN])\n","# label_list_ArSenTD_train = list(df_train[LABEL_COLUMN].unique())\n","# label_list_ArSenTD_valid = list(df_valid[LABEL_COLUMN].unique())\n","# label_list_ArSenTD_test = list(df_test_labels[LABEL_COLUMN].unique())\n","\n","label_list_semeval = ['HS','NOT_HS']\n","data_semeval = Dataset(\"Data-semeval\", df_train, df_valid,df_test,label_list_semeval)\n","all_datasets.append(data_semeval)\n","\n","# ----------------------------------------------------------------- #\n","\n","\n","# df_train = df_train[\"tweets\"]\n","# df_valid = df_valid[\"tweets\"]  \n","# df_test = df_test[\"tweets\"]  \n","\n","\n","# df_ArSenTD = pd.read_csv(\n","#     \"/content/drive/My Drive/Datasets/ArSenTD-LEV/ArSenTD-LEV.tsv\", sep=\"\\t\", header=0\n","# )\n","\n","# df_ArSenTD = df_ArSenTD[['Tweet','Sentiment']]\n","\n","# df_ArSenTD.columns = [DATA_COLUMN, LABEL_COLUMN]\n","\n","# print(df_ArSenTD[LABEL_COLUMN].value_counts())\n","# label_list_ArSenTD = list(df_ArSenTD[LABEL_COLUMN].unique())\n","\n","# train_ArSenTD, test_ArSenTD = train_test_split(\n","#     df_ArSenTD, test_size=0.2, random_state=42\n","# )\n","\n","# data_ArSenTD = Dataset(\"ArSenTD-LEV\", train_ArSenTD, test_ArSenTD, label_list_ArSenTD)\n","# all_datasets.append(data_ArSenTD)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["NOT_HS    6623\n","HS         361\n","Name: HS_Labels, dtype: int64\n","NOT_HS    956\n","HS         44\n","Name: HS_Labels, dtype: int64\n","NOT_HS    1899\n","HS         101\n","Name: HS_Labels, dtype: int64\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-WYy5ikAs7l3","colab":{"base_uri":"https://localhost:8080/","height":406},"executionInfo":{"status":"ok","timestamp":1619169402489,"user_tz":-180,"elapsed":32181,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"5c5e4b25-5bee-4607-83d7-290de7505af7"},"source":["# %load_ext google.colab.data_table\n","df_train"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>tweets</th>\n","      <th>HS_Labels</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>الحمدلله يارب فوز مهم يا زمالك.. كل الدعم ليكم...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>فدوه يا بخت فدوه يا زمن واحد منكم يجيبه</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>RT @USER: يا رب يا واحد يا أحد بحق يوم الاحد ا...</td>\n","      <td>HS</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>RT @USER: #هوا_الحرية يا وجع قلبي عليكي يا امي...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>يا بكون بحياتك الأهم يا إما ما بدي أكون 🎼</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6995</th>\n","      <td>@USER يا حمار ، يا جاهل ، نسبة الباطل ما بتتحس...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>6996</th>\n","      <td>RT @USER: @USER كل زق يا طاقية يا واطي يا حقير...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>6997</th>\n","      <td>@USER&lt;LF&gt;يا كبير يا ممتع يا نجم لابد أن تعي جي...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>6998</th>\n","      <td>يا رب الاتحاد يفوز يا رب. 😭😭 #الاتحاد_النصر</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","    <tr>\n","      <th>6999</th>\n","      <td>يعز عليا ادخل الشارع وملاقيكش واقف مستنيني في ...</td>\n","      <td>NOT_HS</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>6984 rows × 2 columns</p>\n","</div>"],"text/plain":["                                                 tweets HS_Labels\n","0     الحمدلله يارب فوز مهم يا زمالك.. كل الدعم ليكم...    NOT_HS\n","1               فدوه يا بخت فدوه يا زمن واحد منكم يجيبه    NOT_HS\n","2     RT @USER: يا رب يا واحد يا أحد بحق يوم الاحد ا...        HS\n","3     RT @USER: #هوا_الحرية يا وجع قلبي عليكي يا امي...    NOT_HS\n","4             يا بكون بحياتك الأهم يا إما ما بدي أكون 🎼    NOT_HS\n","...                                                 ...       ...\n","6995  @USER يا حمار ، يا جاهل ، نسبة الباطل ما بتتحس...    NOT_HS\n","6996  RT @USER: @USER كل زق يا طاقية يا واطي يا حقير...    NOT_HS\n","6997  @USER<LF>يا كبير يا ممتع يا نجم لابد أن تعي جي...    NOT_HS\n","6998        يا رب الاتحاد يفوز يا رب. 😭😭 #الاتحاد_النصر    NOT_HS\n","6999  يعز عليا ادخل الشارع وملاقيكش واقف مستنيني في ...    NOT_HS\n","\n","[6984 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"lI2kEqe50_s4"},"source":["# train_sentence_length = [ len(text.split()) for text in df_train['tweets']]\n","# valid_sentence_length = [ len(text.split()) for text in df_valid['tweets']]\n","# test_sentence_length = [ len(text.split()) for text in df_test['tweets']]\n","\n","# print(\"Max of train len: \",np.max(train_sentence_length))\n","# print(\"Max of test len: \",np.max(valid_sentence_length))\n","# print(\"Max of test len: \",np.max(test_sentence_length))\n","# import matplotlib.pyplot as plt\n","\n","# plt.hist(train_sentence_length,bins= range(200),density=True)\n","# plt.hist(valid_sentence_length,bins= range(200),density=True)\n","# plt.hist(test_sentence_length,bins= range(200),density=True)\n","# plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"osrsO7ug2OY8"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Bcwdslw7v0Q8"},"source":["#Trainer"]},{"cell_type":"code","metadata":{"id":"HUn2RB6Bvrxj"},"source":["from transformers import AutoTokenizer, AutoModelForMaskedLM,BertForSequenceClassification,AutoModel\n","import numpy as np\n","from sklearn.metrics import classification_report, accuracy_score, f1_score, confusion_matrix, precision_score , recall_score\n","\n","from transformers import AutoConfig, AutoModelForSequenceClassification, AutoTokenizer, BertTokenizer\n","from transformers.data.processors import SingleSentenceClassificationProcessor\n","from transformers import Trainer , TrainingArguments\n","from transformers.trainer_utils import EvaluationStrategy\n","from transformers.data.processors.utils import InputFeatures\n","from torch.utils.data import Dataset\n","from torch.utils.data import DataLoader\n","from sklearn.utils import resample\n","import logging\n","import torch\n","import optuna \n","# from arabert.preprocess_arabert import preprocess, never_split_tokens\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KfNKr05tv7cA"},"source":["logging.basicConfig(level=logging.WARNING)\n","logger = logging.getLogger(__name__)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"R4SGYoB2EDJD","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169405678,"user_tz":-180,"elapsed":35348,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"8a31fd6c-0796-4167-9750-84eebcbafa18"},"source":["for x in all_datasets:\n","  print(x.name)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Data-semeval\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"62Lma6tT5zJi"},"source":["You can choose which model, and dataset from here along with the max sentence length"]},{"cell_type":"code","metadata":{"id":"vzeVFoz1wDYf"},"source":["dataset_name = 'Data-semeval'\n","# model_name = 'qarib/bert-base-qarib'\n","# https://huggingface.co/UBC-NLP/MARBERT\n","model_name = 'UBC-NLP/MARBERT'\n","task_name = 'classification'\n","# num_labels = 2\n","max_len = 256\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tcbD2PCiX4vw","executionInfo":{"status":"ok","timestamp":1619169405679,"user_tz":-180,"elapsed":35339,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"8b257d44-7c24-4928-df34-1ed51397c377"},"source":["for d in all_datasets:\n","  if d.name==dataset_name:\n","    selected_dataset = d\n","    print('Dataset found \\n',dataset_name)\n","    break"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Dataset found \n"," Data-semeval\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"PoyaRIGYCEzh"},"source":["# arabert_prep = ArabertPreprocessor(model_name.split(\"/\")[-1])\n","\n","selected_dataset.train[DATA_COLUMN] = selected_dataset.train[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","selected_dataset.valid[DATA_COLUMN] = selected_dataset.valid[DATA_COLUMN].apply(lambda x:   preprocess(x))\n","selected_dataset.test[DATA_COLUMN] = selected_dataset.test[DATA_COLUMN].apply(lambda x:  preprocess(x))  "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WE_MmGDceJxj","executionInfo":{"status":"ok","timestamp":1619169406065,"user_tz":-180,"elapsed":35716,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"21eb8dbf-e4d8-4f1a-c634-eb9390fbad7b"},"source":["selected_dataset.test[DATA_COLUMN]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       اما انت تقعد طول عمرك لا مبدا ولا راي ثابت يا ...\n","1       بتخاف نسوانك يزعلوا ولا ايه 😂 اه يا هلفوت يا ب...\n","2       يا عـسانـي نـبـقي يا عـمري حـبايـب وحـبنـا يكب...\n","3       باقي البيان وينو ما شفنه يا برهان ورينا يا بره...\n","4       اللهم انت الشافي المعافي اشفيه وجميع مرضي المس...\n","                              ...                        \n","1995    الله لايوفقك يا مهند عسيري يا معوق ولا كان مرت...\n","1996                   حبيبي يا يوسف وانت طيب يا صاحبي 💘💘\n","1997    يا بو محمد عشت يا طيب الفال عاشت يمينك يا جزيل...\n","1998    انا مستني الحلقه بقالي سنتين يا بضان يا ابن ال...\n","1999    انتظروا العقوبه الالهيه يا من تدعمون الارهاب ي...\n","Name: tweets, Length: 2000, dtype: object"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"4YS7XI2bZTyz"},"source":["class BERTDataset(Dataset):\n","    def __init__(self, text, target, model_name, max_len, label_map):\n","      super(BERTDataset).__init__()\n","      self.text = text\n","      self.target = target\n","      self.tokenizer_name = model_name\n","      self.tokenizer = AutoTokenizer.from_pretrained(model_name)\n","      self.max_len = max_len\n","      self.label_map = label_map\n","      \n","\n","    def __len__(self):\n","      return len(self.text)\n","\n","    def __getitem__(self,item):\n","      text = str(self.text[item])\n","      text = \" \".join(text.split())\n","\n","\n","        \n","      input_ids = self.tokenizer.encode(\n","          text,\n","          add_special_tokens=True,\n","          max_length=self.max_len,\n","          truncation='longest_first'\n","      )     \n","    \n","      attention_mask = [1] * len(input_ids)\n","\n","      # Zero-pad up to the sequence length.\n","      padding_length = self.max_len - len(input_ids)\n","      input_ids = input_ids + ([self.tokenizer.pad_token_id] * padding_length)\n","      attention_mask = attention_mask + ([0] * padding_length)    \n","      \n","      return InputFeatures(input_ids=input_ids, attention_mask=attention_mask, label=self.label_map[self.target[item]])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jeS-X4DP25Sq"},"source":["# config = AutoConfig.from_pretrained(model_name,num_labels=num_labels, output_attentions=True) ##needed for the visualizations\n","# tokenizer = AutoTokenizer.from_pretrained(model_name, do_lower_case=False, do_basic_tokenize=True)\n","# model = AutoModel.from_pretrained(model_name,config=config)\n","# # # AutoModelForMaskedLM"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GCwNQrY_3sq3"},"source":["# print(config)\n","# print(model)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_ieCOj90aw8X"},"source":["# train_dataset = SingleSentenceClassificationProcessor(mode='classification')\n","# valid_dataset = SingleSentenceClassificationProcessor(mode='classification')\n","# test_dataset = SingleSentenceClassificationProcessor(mode='classification')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UMMf54S44MS9"},"source":["# train_dataset.add_examples(texts_or_text_and_labels=df_train['tweets'],labels=df_train['HS_Labels'],overwrite_examples = True)\n","# valid_dataset.add_examples(texts_or_text_and_labels=df_valid['tweets'],labels=df_valid['HS_Labels'],overwrite_examples = True)\n","# test_dataset.add_examples(texts_or_text_and_labels=df_test['tweets'],labels=df_test_labels['HS_Labels'],overwrite_examples = True)\n","\n","# print(train_dataset.examples[0])\n","# # print(valid_dataset.examples[0])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fRRt4d1LPUny"},"source":["# train_features = train_dataset.get_features(tokenizer = tokenizer, max_len = max_len)\n","# valid_features = valid_dataset.get_features(tokenizer = tokenizer, max_length = max_length)\n","# test_features = test_dataset.get_features(tokenizer = tokenizer, max_length = max_length)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mciZOFz-amkV","colab":{"base_uri":"https://localhost:8080/","height":233,"referenced_widgets":["d73b09d9a890477d8175ed3d77482622","29e5179578124a89bb841b604f511f69","dea2867e666942008735b83af033794d","f60e833062d64812962778b2c6396981","69f6b9dc55a34d8d87cbec4edfaf5e86","0f42bc9c63a842f9a3e66555dc31cf1b","65a3dcd04b314a3f882009c4fe54074b","0716ac11d31e4b268aceb9febd1481bb","2f412705fcb547709f8ec9f11d53b065","27c04be5ced74e4ea17a40f7f54b9ae1","674b948017924e01ab6c55b18a1da1b4","a5493ea0b6e743798201590737930150","e18c25d19728486fbdd2a6bf1b772560","6e200377648b4e3c814c1b11f150abcd","82380d69e77a4bb98d0cf487b507b5cd","755108493118483da0dbf61ab7de6d49","9e83e503bdc74ccca4bb2c209fb5afab","61c30fe313824feda5014719b9c52fed","349c5e50ad1749a8be7a36446f2bd403","f2965b516fdd4323a2d501d1db05523e","9cfb87c18e8f4a828f2bfbc9466dfa77","f870aaf0241543fca25e260f99518515","cdf0bc78470f4ae782e4290db94f2ba9","e3d8129dbd7e4b2bb00fa303163dd999","157fda34d1bc45d8a538d319b1ffee4a","a095acb1e056436e8812133e6ed45f03","dd5f6ddf1ff747699d84a5e93e27034c","153daa0ebcd34364b3c83f1b074773b5","03cb42fac3cd4fb0be5d79e4ee7142eb","201b1a986aae4582b511aab101d375b5","65155853cbb848559f8e363e56b4fed9","369c715b5e71493c9697323fd463a32b"]},"executionInfo":{"status":"ok","timestamp":1619169412052,"user_tz":-180,"elapsed":41675,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"2a0bb0a7-71b1-41f7-b77e-9f50530e2166"},"source":["label_map = { v:index for index, v in enumerate(selected_dataset.label_list) }\n","print(label_map)\n","# label_map_test = { v:index for index, v in enumerate(df_test_labels.HS_Labels) }\n","# print(label_map_test)\n","# label_map_valid = { v:index for index, v in enumerate(df_valid.HS_Labels) }\n","# print(label_map_valid)\n","# train_dataset = BERTDataset(selected_dataset.train[DATA_COLUMN].to_list(),selected_dataset.train[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","# test_dataset = BERTDataset(selected_dataset.test[DATA_COLUMN].to_list(),selected_dataset.test[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","\n","train_dataset = BERTDataset(selected_dataset.train[DATA_COLUMN].to_list(),selected_dataset.train[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","valid_dataset = BERTDataset(selected_dataset.valid[DATA_COLUMN].to_list(),selected_dataset.valid[LABEL_COLUMN].to_list(),model_name,max_len,label_map)\n","test_dataset = BERTDataset(selected_dataset.test[DATA_COLUMN].to_list(),selected_dataset.test[LABEL_COLUMN].to_list(),model_name,max_len,label_map)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{'HS': 0, 'NOT_HS': 1}\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"d73b09d9a890477d8175ed3d77482622","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=701.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"2f412705fcb547709f8ec9f11d53b065","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=1099714.0, style=ProgressStyle(descript…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"9e83e503bdc74ccca4bb2c209fb5afab","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=112.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"157fda34d1bc45d8a538d319b1ffee4a","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=376.0, style=ProgressStyle(description_…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"lt7l0IxjbmNu"},"source":["def model_init():\n","    return AutoModelForSequenceClassification.from_pretrained(model_name, return_dict=True, num_labels=len(label_map))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UYU6G4vWc5nz"},"source":["def compute_metrics(p): #p should be of type EvalPrediction\n","  preds = np.argmax(p.predictions, axis=1)\n","  assert len(preds) == len(p.label_ids)\n","  print(classification_report(p.label_ids,preds))\n","  print(confusion_matrix(p.label_ids,preds))\n","\n","  macro_f1_pos_neg = f1_score(p.label_ids,preds,average='macro',labels=[0,1])\n","  macro_f1 = f1_score(p.label_ids,preds,average='macro')\n","  macro_precision = precision_score(p.label_ids,preds,average='macro')\n","  macro_recall = recall_score(p.label_ids,preds,average='macro')\n","  acc = accuracy_score(p.label_ids,preds)\n","  return {\n","      'macro_f1' : macro_f1,\n","      'macro_f1_pos_neg' : macro_f1_pos_neg,  \n","      'macro_precision': macro_precision,\n","      'macro_recall': macro_recall,\n","      'accuracy': acc\n","  }"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GnqiZOT37ByE"},"source":["# HyperParameter Search"]},{"cell_type":"markdown","metadata":{"id":"bJif-78C6Kmn"},"source":["you can change the batch size and gradient accumulation from here\n","\n"]},{"cell_type":"code","metadata":{"id":"L3Z_kPB-dE_w"},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.lr_scheduler_type = 'cosine'\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000\n","# training_args.save_steps = \n","#training_args.eval_steps = \n","training_args.disable_tqdm = True\n","# print(\"Logging Step:\", training_args.logging_steps)\n","# print(\"Eval Step:\",training_args.eval_steps)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"KeqRACPYheeb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169412055,"user_tz":-180,"elapsed":41658,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"752095e8-e125-4111-ce7a-517c9f6e692a"},"source":["steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"o8HOnY6odcwG","colab":{"base_uri":"https://localhost:8080/","height":175,"referenced_widgets":["6d50c65a38aa4c98a18507eb6fb9343c","eaef6d0db318490b8e652d3b2f81e24e","b5839a9217ac492bb8ae289d3b51e815","0bf3f0a3c5d14b54ba4103fb0f2a8d97","4d3b3d75d4224fd1aa60aa54f75e8615","89a9da4d5e51437cab4355a49d906f0f","a715c74dd0364c4da55595e726c796cd","d955909759264d3a9331c918bd91cf4e"]},"executionInfo":{"status":"ok","timestamp":1619169439920,"user_tz":-180,"elapsed":69518,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"a3ba5f3c-afcf-4ab6-f034-44ed4ebdc10f"},"source":["trainer = Trainer(\n","    args=training_args,\n","    train_dataset=train_dataset, \n","    eval_dataset=valid_dataset, \n","    model_init=model_init,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"application/vnd.jupyter.widget-view+json":{"model_id":"6d50c65a38aa4c98a18507eb6fb9343c","version_minor":0,"version_major":2},"text/plain":["HBox(children=(FloatProgress(value=0.0, description='Downloading', max=654186400.0, style=ProgressStyle(descri…"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n"],"name":"stdout"},{"output_type":"stream","text":["Some weights of the model checkpoint at UBC-NLP/MARBERT were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at UBC-NLP/MARBERT and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"AFZ94M7Rzkhh","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169439923,"user_tz":-180,"elapsed":69515,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"2a781bfe-65af-4702-e2e3-cbf826a75b0f"},"source":["def my_hp_space(trial):\n","    return {\n","        \"learning_rate\": trial.suggest_float(\"learning_rate\", 2e-5, 7e-5, step=1e-5),\n","        \"seed\": trial.suggest_categorical(\"seed\", [0, 1, 42, 666, 123, 12345]),\n","        \"warmup_steps\": trial.suggest_int(\"warmup_steps\",0,total_steps*0.1,step=total_steps*0.1*0.5)\n","    }\n","\n","search_space = {\n","    \"learning_rate\":  list(np.arange(2e-5, 7e-5, 1e-5)),\n","    \"seed\":  [0, 1, 42, 666, 123, 12345],\n","    \"warmup_steps\": list(range(0, int((total_steps)*0.1)+1, int(total_steps*0.1*0.5)))\n","}\n","search_space"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'learning_rate': [2e-05,\n","  3.0000000000000004e-05,\n","  4.000000000000001e-05,\n","  5.000000000000001e-05,\n","  6.000000000000001e-05],\n"," 'seed': [0, 1, 42, 666, 123, 12345],\n"," 'warmup_steps': [0, 87, 174]}"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"PgfU2UVzfS_A"},"source":["def my_objective(metrics):\n","    return metrics['eval_macro_f1']"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"nc4gOvtE66Mj"},"source":["choose a study name to save it on disk"]},{"cell_type":"code","metadata":{"id":"NSGLnBKv64sZ"},"source":["# name = \"qarib-semeval\""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7l821sW7fdaY"},"source":["# best_run = trainer.hyperparameter_search(direction=\"maximize\",\n","#                                          hp_space=my_hp_space,\n","#                                          compute_objective=my_objective,\n","#                                          n_trials=None,\n","#                                          pruner=optuna.pruners.NopPruner(),\n","#                                          sampler=optuna.samplers.GridSampler(search_space),\n","#                                          study_name=name,\n","#                                          storage=\"sqlite:////content/drive/MyDrive/{}.db\".format(name),\n","#                                          load_if_exists=False # you can change this to true, for continuing the search\n","#                                          )"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OVwfM9ZJf12t"},"source":["# best_run"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vTmvFEs41WkV"},"source":["#Regular Training"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kTLYpWADhZPq","executionInfo":{"status":"ok","timestamp":1619169439925,"user_tz":-180,"elapsed":69495,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"31e052d5-fc8a-4566-b393-4f3218285a36"},"source":["training_args = TrainingArguments(\"./train\")\n","training_args.evaluate_during_training = True\n","training_args.adam_epsilon = 1e-8\n","training_args.learning_rate = 5e-5\n","training_args.fp16 = True\n","training_args.per_device_train_batch_size = 16\n","training_args.per_device_eval_batch_size = 16\n","training_args.gradient_accumulation_steps = 2\n","training_args.num_train_epochs= 8\n","\n","\n","steps_per_epoch = (len(selected_dataset.train)// (training_args.per_device_train_batch_size * training_args.gradient_accumulation_steps))\n","total_steps = steps_per_epoch * training_args.num_train_epochs\n","print(steps_per_epoch)\n","print(total_steps)\n","#Warmup_ratio\n","warmup_ratio = 0.1\n","training_args.warmup_steps = total_steps*warmup_ratio # or you can set the warmup steps directly \n","\n","training_args.evaluation_strategy = EvaluationStrategy.EPOCH\n","# training_args.logging_steps = 200\n","training_args.save_steps = 100000 #don't want to save any model, there is probably a better way to do this :)\n","training_args.seed = 42\n","training_args.disable_tqdm = False\n","training_args.lr_scheduler_type = 'cosine'"],"execution_count":null,"outputs":[{"output_type":"stream","text":["218\n","1744\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"V_oGjIC-7Vow"},"source":["This paert allows you to do a regular training with no hyper parameter optimization"]},{"cell_type":"code","metadata":{"id":"Ro5BW5ak4uc1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619169445365,"user_tz":-180,"elapsed":74929,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"9190cca0-1352-4fb3-9235-64da319b0cbd"},"source":["trainer = Trainer(\n","    model = model_init(),\n","    args = training_args,\n","    train_dataset = train_dataset,\n","    eval_dataset=valid_dataset,\n","    compute_metrics=compute_metrics,\n",")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Some weights of the model checkpoint at UBC-NLP/MARBERT were not used when initializing BertForSequenceClassification: ['cls.predictions.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at UBC-NLP/MARBERT and are newly initialized: ['classifier.weight', 'classifier.bias']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"yx336O3J2SdQ","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1619170503880,"user_tz":-180,"elapsed":1133431,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"1a91594e-0561-4c10-86dc-6344405c9516"},"source":["trainer.train()"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","        </style>\n","      \n","      <progress value='1744' max='1744' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [1744/1744 17:37, Epoch 7/8]\n","    </div>\n","    <table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: left;\">\n","      <th>Epoch</th>\n","      <th>Training Loss</th>\n","      <th>Validation Loss</th>\n","      <th>Macro F1</th>\n","      <th>Macro F1 Pos Neg</th>\n","      <th>Macro Precision</th>\n","      <th>Macro Recall</th>\n","      <th>Accuracy</th>\n","      <th>Runtime</th>\n","      <th>Samples Per Second</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <td>0</td>\n","      <td>No log</td>\n","      <td>0.105737</td>\n","      <td>0.710754</td>\n","      <td>0.710754</td>\n","      <td>0.797643</td>\n","      <td>0.665747</td>\n","      <td>0.962000</td>\n","      <td>6.563700</td>\n","      <td>152.353000</td>\n","    </tr>\n","    <tr>\n","      <td>1</td>\n","      <td>No log</td>\n","      <td>0.155646</td>\n","      <td>0.767335</td>\n","      <td>0.767335</td>\n","      <td>0.867179</td>\n","      <td>0.712771</td>\n","      <td>0.969000</td>\n","      <td>6.528400</td>\n","      <td>153.178000</td>\n","    </tr>\n","    <tr>\n","      <td>2</td>\n","      <td>0.134200</td>\n","      <td>0.192686</td>\n","      <td>0.743723</td>\n","      <td>0.743723</td>\n","      <td>0.793552</td>\n","      <td>0.709633</td>\n","      <td>0.963000</td>\n","      <td>6.517000</td>\n","      <td>153.444000</td>\n","    </tr>\n","    <tr>\n","      <td>3</td>\n","      <td>0.134200</td>\n","      <td>0.229663</td>\n","      <td>0.775476</td>\n","      <td>0.775476</td>\n","      <td>0.838144</td>\n","      <td>0.733929</td>\n","      <td>0.968000</td>\n","      <td>6.518900</td>\n","      <td>153.399000</td>\n","    </tr>\n","    <tr>\n","      <td>4</td>\n","      <td>0.014500</td>\n","      <td>0.279918</td>\n","      <td>0.763627</td>\n","      <td>0.763627</td>\n","      <td>0.806289</td>\n","      <td>0.732360</td>\n","      <td>0.965000</td>\n","      <td>6.550200</td>\n","      <td>152.666000</td>\n","    </tr>\n","    <tr>\n","      <td>5</td>\n","      <td>0.014500</td>\n","      <td>0.290894</td>\n","      <td>0.751192</td>\n","      <td>0.751192</td>\n","      <td>0.814713</td>\n","      <td>0.710679</td>\n","      <td>0.965000</td>\n","      <td>6.546700</td>\n","      <td>152.750000</td>\n","    </tr>\n","    <tr>\n","      <td>6</td>\n","      <td>0.000100</td>\n","      <td>0.294813</td>\n","      <td>0.751192</td>\n","      <td>0.751192</td>\n","      <td>0.814713</td>\n","      <td>0.710679</td>\n","      <td>0.965000</td>\n","      <td>6.486600</td>\n","      <td>154.165000</td>\n","    </tr>\n","    <tr>\n","      <td>7</td>\n","      <td>0.000100</td>\n","      <td>0.295610</td>\n","      <td>0.751192</td>\n","      <td>0.751192</td>\n","      <td>0.814713</td>\n","      <td>0.710679</td>\n","      <td>0.965000</td>\n","      <td>6.519200</td>\n","      <td>153.394000</td>\n","    </tr>\n","  </tbody>\n","</table><p>"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.62      0.34      0.44        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.80      0.67      0.71      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 15  29]\n"," [  9 947]]\n","              precision    recall  f1-score   support\n","\n","           0       0.76      0.43      0.55        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.97      1000\n","   macro avg       0.87      0.71      0.77      1000\n","weighted avg       0.96      0.97      0.96      1000\n","\n","[[ 19  25]\n"," [  6 950]]\n","              precision    recall  f1-score   support\n","\n","           0       0.61      0.43      0.51        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.79      0.71      0.74      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 19  25]\n"," [ 12 944]]\n","              precision    recall  f1-score   support\n","\n","           0       0.70      0.48      0.57        44\n","           1       0.98      0.99      0.98       956\n","\n","    accuracy                           0.97      1000\n","   macro avg       0.84      0.73      0.78      1000\n","weighted avg       0.96      0.97      0.97      1000\n","\n","[[ 21  23]\n"," [  9 947]]\n","              precision    recall  f1-score   support\n","\n","           0       0.64      0.48      0.55        44\n","           1       0.98      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.81      0.73      0.76      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 21  23]\n"," [ 12 944]]\n","              precision    recall  f1-score   support\n","\n","           0       0.66      0.43      0.52        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.81      0.71      0.75      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 19  25]\n"," [ 10 946]]\n","              precision    recall  f1-score   support\n","\n","           0       0.66      0.43      0.52        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.81      0.71      0.75      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 19  25]\n"," [ 10 946]]\n","              precision    recall  f1-score   support\n","\n","           0       0.66      0.43      0.52        44\n","           1       0.97      0.99      0.98       956\n","\n","    accuracy                           0.96      1000\n","   macro avg       0.81      0.71      0.75      1000\n","weighted avg       0.96      0.96      0.96      1000\n","\n","[[ 19  25]\n"," [ 10 946]]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["TrainOutput(global_step=1744, training_loss=0.04268238280788748, metrics={'train_runtime': 1058.3251, 'train_samples_per_second': 1.648, 'total_flos': 13973076111433728, 'epoch': 8.0})"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":392},"id":"agqaiJStrc_w","executionInfo":{"status":"ok","timestamp":1619170517126,"user_tz":-180,"elapsed":1146669,"user":{"displayName":"Do salam","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgP0GyFxHH-3NAPSZ_ethp4uMqaN8pUWhOxcO0NDw=s64","userId":"03587359084159229589"}},"outputId":"a5ecd4d2-9111-4404-b386-5e44f2934343"},"source":["trainer.evaluate(test_dataset)"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","    <div>\n","        <style>\n","            /* Turns off some styling */\n","            progress {\n","                /* gets rid of default border in Firefox and Opera. */\n","                border: none;\n","                /* Needs to be in here for Safari polyfill so background images work as expected. */\n","                background-size: auto;\n","            }\n","        </style>\n","      \n","      <progress value='125' max='125' style='width:300px; height:20px; vertical-align: middle;'></progress>\n","      [125/125 00:12]\n","    </div>\n","    "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["              precision    recall  f1-score   support\n","\n","           0       0.74      0.53      0.62       101\n","           1       0.98      0.99      0.98      1899\n","\n","    accuracy                           0.97      2000\n","   macro avg       0.86      0.76      0.80      2000\n","weighted avg       0.96      0.97      0.96      2000\n","\n","[[  54   47]\n"," [  19 1880]]\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["{'epoch': 8.0,\n"," 'eval_accuracy': 0.967,\n"," 'eval_loss': 0.27737078070640564,\n"," 'eval_macro_f1': 0.8017196315590245,\n"," 'eval_macro_f1_pos_neg': 0.8017196315590245,\n"," 'eval_macro_precision': 0.8576678917474105,\n"," 'eval_macro_recall': 0.7623240997085491,\n"," 'eval_runtime': 12.9975,\n"," 'eval_samples_per_second': 153.875}"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"RrmCpsROvS-z"},"source":["# df_test_labels.columns = [LABEL_COLUMN]\n","# test_dataset = BERTDataset(selected_dataset.test[DATA_COLUMN].to_list(),selected_dataset.df_test_labels[LABEL_COLUMN].to_list(),model_name,max_len,label_map)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Seyz8Yaj2ZCK"},"source":["trainer.save_model(\"SOME_PATH\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"xd1iuK-UFjEV"},"source":[""],"execution_count":null,"outputs":[]}]}